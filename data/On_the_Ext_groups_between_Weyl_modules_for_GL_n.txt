                                                             On the Ext groups between Weyl modules for GLn



                                                                                Upendra Kulkarni

                                                  Truman State University, Kirksville, MO 63501 (Email: kulkarni@truman.edu)
arXiv:math/0505370v1 [math.RT] 18 May 2005




                                                                                      Abstract

                                                  This paper studies extension groups between certain Weyl modules for the algebraic
                                             group GLn over the integers. Main results include: (1) A complete determination of
                                             Ext groups between Weyl modules whose highest weights differ by a single root and (2)
                                             Determination of Ext1 between an exterior power of the defining representation and any
                                             Weyl module. The significance of these results for modular representation theory of GLn is
                                             discussed in several Remarks. Notably the first result leads to a calculation of Ext groups
                                             between neighboring Weyl modules for GLn and also recovers the GLn case of a recent
                                             result of Andersen. Some generalities about Ext groups between Weyl modules and a brief
                                             overview of known results about these groups are also included.



                                                                                 INTRODUCTION

                                                  This paper studies some homological aspects of the representation theory of the alge-
                                             braic group GLn over the integers. More specifically we will investigate Ext groups between
                                             certain pairs of Weyl modules for GLn (Z) and also discuss the significance of these results
                                             in modular representation theory of GLn . Weyl modules are universal highest weight mod-
                                             ules in the representation category of split reductive algebraic groups. Extensions between
                                             these modules are of interest in representation theory. Let us outline and briefly discuss
                                             the main results. For a highest weight λ, let Kλ denote the corresponding Weyl module.

                                                  (1) Theorem 2.1 gives a complete determination of the groups ExtiGLn (Z) (Kλ , Kµ )
                                             where µ−λ is a positive root α of GLn . Here Ext1 is cyclic of order hλ+ρ, αˇi+1, where ρ is
                                             half the sum of positive roots and all other Ext groups vanish. By the Universal Coefficient
                                             Theorem, one then gets all the modular Ext groups as well for this class of examples.
                                             Moreover, in the modular case and also over the p-adic integers, one can calculate Ext
                                             groups between any two neighboring Weyl modules for GLn using Theorem 2.1 along with
                                             the translation principle. This recovers the GLn case of a recent result of [Andersen3]
                                             obtained independently around the same time as an equivalent version of Theorem 2.1.
                                             Neighboring Weyl modules are defined only if regular weights exist, which happens only
                                             if the characteristic p is at least n. Theorem 2.1 is of additional interest because it gives
                                             results in the modular case even for small primes. See the Remarks after the proof of
                                             Theorem 2.1 for a discussion. In view of Andersen’s result, it seems natural to hope

                                                                                          1
that Theorem 2.1, as stated at the beginning of this paragraph, remains true for all split
reductive algebraic groups over Z.

     (2) Theorem 2.2 determines Ext1 between an exterior power of the defining represen-
tation and any Weyl module Kλ . This group is cyclic and its order is the gcd of several
integers that can be described explicitly in terms of the weight λ. By contravariant duality
and conjugate symmetry of Ext groups, this result also leads to the calculation of certain
other Ext1 groups, e.g., Ext1 between a symmetric power of the defining representation
and a dual Weyl module. It is interesting to compare Theorem 2.2 with the known enu-
meration of the composition factors of symmetric powers in characteristic p. See Remark
3 after the proof of Theorem 2.2.

     Let us review the previously known information about the groups Exti (Kλ , Kµ ), in
the modular as well as the integral setting. (Note that the Ext is always taken in the
appropriate category of representations. But, as in the previous sentence, the notation
will often omit this fact relying on the context to convey the intended meaning.) Even
though the work in this paper deals directly only with the integral case, the two cases are
intimately connected via the Universal Coefficient Theorem.

     Let us begin with the modular case, i.e., that of reductive algebraic groups over an
algebraically closed field of characteristic p > 0. An important result here is the vanishing
theorem of Cline-Parshall-Scott-van der Kallen. [CPSvdK] proves that for any such group
Exti (Kλ , Kµ ) vanishes unless λ ≤ µ under the dominance partial order, i.e., unless µ − λ is
a sum of positive roots. This vanishing result was strengthened after the proof of the strong
linkage principle (see, e.g., [Jantzen]). As a result, one can replace the dominance relation
≤ in the vanishing theorem above by a finer relation ↑, where ↑ is the “linkage” relation
defined using the dot action of the affine Weyl group Wp on weights. When λ ↑ µ, the
calculation of the groups Exti (Kλ , Kµ ) is not known in general and is likely to be difficult.
But we do know the answer in the important case of “neighboring Weyl modules.” This
refers to the siutation when λ and µ are regular (i.e., have a trivial stabilizer in Wp ) and
λ < s.λ = µ, where s is the reflection in a wall of the alcove containing λ. In this case
[Jantzen, II.7.19] proves that Exti (Kλ , Ks.λ) is one-dimesional if i = 0 or 1 and vanishes
otherwise. (The relevance of this result for us will be discussed in the Remarks after the
proof of Theorem 2.1.) Beyond this there are several results in more or less special cases,
in which the answers as well as the needed arguments are often involved. See [Jantzen,
II.6.25] for a discussion of results regarding homomorphisms between Weyl modules and
[Wen] for some further cases. [O-M] calculates Hom between certain hook representations
for GLn . [Erdmann] and [CE] respectively calculate Ext1 and Ext2 between modular Weyl
modules for SL2 .

     Before turning to the integral case, let us digress to comment on the case of the
Bernstein-Gelfand-Gelfand category O of representations of complex semisimple Lie alge-
bras. This situation is somewhat parallel to modular representations of reductive algebraic
groups. The universal highest weight modules here (i.e., analogues of Weyl modules) are
Verma modules. The extent of our knowledge about the Ext groups between these is simi-

                                               2
lar to that for Weyl modules. Similar vanishing properties hold, and Hom groups between
neighboring Verma modules are one-dimensional. But additionally, unlike in the case of
Weyl modules, there is a well-known calculation of Hom groups between arbitrary Verma
modules. The answer involves the Bruhat order on the associated Weyl group. A guess
was made in [GJ] expressing all Ext groups between arbitrary Verma modules in terms of
R-polynomials for the associated Weyl group. But this guess was found to be incorrect in
[Boe], underscoring the seeming difficulty of calculating these Ext groups.

     Let us now survey the integral case, i.e., that of Ext groups between integral Weyl
modules. First of all, the vanishing result of [CPSvdK] immediately carries over to this case.
The strengthening due to the linkage principle is not available over Z. But the Universal
Coefficient Theorem does allow us to translate the characteristic p results mentioned above
into information about p-torsion of integral Ext groups between Weyl modules. So we
know that there will be no p-torsion in ExtiGLn (Z) (Kλ , Kµ ) unless λ ↑ µ under the action
of Wp . Similarly a nonzero homomorphism (respectively, a one-dimensional Hom group)
between two Weyl modules in characteristic p translates into nonvanishing (respectively
cyclic) p-torsion in the corresponding integral Ext1 . Beyond this what we have are mainly
special case results for the Ext groups between Weyl modules for GLn due to various
authors. These results are obtained following the basic approach in [AB2], which relies on
constructing explicit projective resolutions of Weyl modules. See [AB2], [F], [BF] for Ext1
between special pairs of representations of GL2 and GL3 . See [Akin] and [Maliakas] for
Ext1 in some other special cases involving hooks. (The calculation in [Maliakas] implies
the earlier modular result in [O-M].) See [R-G] for Ext2 for GL2 . (The results of [AB2] and
[R-G] together recover the modular calculation of Ext1 for SL2 cited above. [Erdmann, p.
456] describes this calculation in terms of a set Ψ(r) which the author finds convenient to
define as a union of two subsets. It turns out that via the Universal Coefficient Theorem,
the first of these subsets is accounted for by integral Ext2 [R-G] and the second by integral
Ext1 [AB2].) Theorem 2.1 in this paper generalizes a result of [Maliakas] and intersects
to various degrees with the results of other papers. Theorem 2.2 generalizes certain Ext1
calculations in [AB2] and [Akin].

     Unlike [AB2], the approach here does not use resolutions directly. Instead a key tool
will be the Skew Representative Theorem from [Kulkarni1]. Some other notions and meth-
ods that we will use are as follows. (These topics are discussed in Section 1.) The explicit
combinatorial/multilinear-algebraic descriptions of Weyl modules for GLn , ordinary as well
as “skew,” due to Akin-Buchsbaum-Weyman will be very useful for us in proofs. Also very
useful will be Pieri-type rules giving filtrations of certain special skew Weyl modules. The
Schur algebras S(n, r) will play a role, though mostly in the background. These algebras
were first treated systematically in [Green], where it is proved that polynomial representa-
tions of GLn of degree r are equivalent to the representations of the Schur algebra S(n, r).
Then the main new idea can be described as a way to reduce questions about a Schur alge-
bra to questions about another Schur algebra of smaller degree and then to use recursion.
The Skew Representative Theorem is the vehicle that allows one to do this.

    Finally, let me indicate why this paper deals only with GLn and comment on possible

                                              3
generalizations. (Incidentally the main results here stay valid for SLn . We will use GLn
as it will be more natural to for us work in that setting.) Many of the generalities used
in this paper for GLn hold for other reductive algebraic groups too. Donkin has defined
algebras generalizing S(n, r) for all split reductive algebraic groups, now known as Schur
algebras. These more general Schur algebras are examples of the quasihereditary alge-
bras of Cline-Parshall-Scott. Several of the properties relevant to this paper (existence of
suitable filtrations, triangular Ext-vanishing properties with respect to a suitable partial
order on weights) hold in the broader setting of highest weight categories (i.e., represen-
tations of quasihereditary algebras) of Cline-Parshall-Scott or BGG categories of Irving.
But after the generalities, what allows one to push through with the calculations is the
availability for GLn of some very explicit characteristic-free constructions. To carry out
a similar method for other reductive groups, one should look for a good analogue of skew
Weyl modules for which a version of the Skew Representative Theorem holds. Donkin has
previously constructed “skew modules” for reductive groups [Donkin2]. More recently, he
has also proved [Donkin3] a version of the Skew Representative Theorem for these general
skew modules. Since all his constructions are abstract, it is not immediately clear how
one can use them to get analogues of results for GLn that are obtained in this paper by
concrete calculations.

     In another direction, natural analogues of all the results in this paper should hold for
quantum GLn as well. One just has to replace the [ABW] constructions by the construc-
tions of Hashimoto-Hayashi for quantum Schur and Weyl modules. But we will not pursue
this here.

    Since the first version of this paper was written, a result similar to Theorem 2.1 and
obtained independently around the same time has been published by Andersen. For any
reductive algebraic group over an algebraically closed field of characteristic p > 0, [An-
dersen3] calculates Ext groups between neighboring Weyl modules for the corresponding
Chevalley group over the p-adic integers. The connection between Theorem 2.1 and An-
dersen’s result is discussed after the proof of Theorem 2.1. One upshot is that it seems
natural to hope for the validity of Theorem 2.1 for any split reductive algebraic group
over Z. A possible way to approach the expected generalization is to use Donkin’s work
mentioned above. Another possibility is to try to extend Andersen’s proof, namely work
with one prime at a time and use translation functors, keeping careful track of the modules
that arise for small primes.



                          1. BACKGROUND AND NOTATION

     This section discusses, in a little more detail than is strictly necessary, the following
two topics. First, the definition and some properties of Weyl and Schur modules (both
ordinary and “skew”) following Akin-Buchsbaum-Weyman, and second, some results of a
general nature about certain Ext groups of interest. Proofs are given for a couple of easy
results apparently unrecorded elsewhere. Along the way we will also discuss the role of the

                                              4
Schur algebras S(n, r) and then use these algebras while discussing Ext groups.

     Throughout the rest of this paper, the ground ring will be Z unless otherwise indicated.
The exceptions will mainly occur in some of the Remarks after the results, where the
significance of the results in modular representation theory is discussed. In any event all
discussions where we will need to consider a ground ring other than Z will take place in
a separate paragraph, with an appropriate notice to that effect at the beginning of that
paragraph.

      We will study some homological aspects of the representation theory of the reductive
algebraic group scheme GL(F ) = GLn , where F is a free abelian group of rank n. See,
e.g., [Jantzen]. Weights for GLn are multiplicative characters of a maximal toral subgroup
scheme. We will follow the common practice of taking this to be the diagonal subgroup
Diag(Zn ) and identifying weights for GLn with n-tuples of integers λ = (λ1 , . . . , λn ). A
weight
P        λ is a polynomial weight if λi are all nonnegative and then the degree of λ is |λ| =
   λi . Dominant weights are the ones with λ1 ≥ . . . ≥ λn . Dominant polynomial weights
are thus just partitions (with at most n parts), which we will frequently identify with their
Young diagrams (with at most n rows). The usual dominance partial order on weights is
the one generated by stipulating that (. . . , λi , λi+1 , . . .) < (. . . , λi + 1, λi+1 − 1, . . .). For
Young diagrams this means that moving boxes upwards gives a bigger partition. Note that
a given Young diagram λ can be considered a weight for all GLn with n ≥ the number of
rows of λ. In the main results it will be convenient for us to adopt this point of view by
fixing the partitions and dealing with all such n simultaneously.

     Given any partition λ, its conjugate λ̃ is the partition whose diagram is obtained by
transposing (i.e., by exchanging rows and columns of) the diagram of λ. In the literature
the notation λ′ is often used instead of λ̃, but we will follow the notation in [ABW]. It
should be noted that even if λ has at most n nonzero parts (and so is a weight for GLn ),
λ̃ may have more nonzero parts and so need not be a weight for GLn . Thus conjugation
is really an operation on “stable” weights.

     Weyl and Schur modules. Let λ be a partition having number of rows ≤ the rank
of F . Following [ABW], we will use Kλ (F ) to denote the Weyl module of highest weight
λ. When there is no danger of confusion, we will often drop the F and simply write Kλ .
The notation in this paper is different from the standard one! The standard notation for
the Weyl module of highest weight λ is V (λ). See, e.g., [Jantzen]. But we will need to use
heavily the constructions in [ABW] of Weyl modules as well as of certain generalizations
of Weyl modules defined in the same paper (see below). So we will sacrifice the standard
notation for the sake of consistency with this reference. Note further that in [ABW] Weyl
modules are called coSchur modules, a term that will not be used in this paper (and which
was abandoned later by its authors as well).

      Some remarks are in order before introducing the “skew Weyl modules.” First of all,
as defined in [ABW], Kλ is a functor that assigns to any finitely generated free abelian
group F an abelian group Kλ (F ). That Kλ is a functor means in particular that Kλ (F )
is a representation of GL(F ). Also note that the [ABW] definition of Kλ works even when

                                                    5
the number of rows in λ is greater than the rank of F , i.e., when λ is not a weight of
GL(F ). But in that case Kλ (F ) = 0. While speaking of Weyl modules, we will always
tacitly assume that the rank of F is big enough so that the involved partitions are weights
for GL(F ) and hence the Weyl modules in question are nonzero. With this proviso, the
rank of F will not really matter to us. See the discussion after Proposition 1.1 below.

     Let us introduce the “skew Weyl modules” defined in [ABW]. For an arbitrary skew
partition λ/µ, [ABW] defines a functor Kλ/µ assigning to any finitely generated free abelian
group F the skew Weyl module Kλ/µ (F ). (Again we will usually drop the F in the
notation.) Here λ is a partition and µ is any partition whose Young diagram is contained
in that of λ. The skew partition λ/µ is best visualized as the diagram obtained by removing
the diagram of µ from the diagram of λ. Thus any partition λ is also a skew partition λ/µ
with µ empty and in fact ordinary Weyl modules are special cases of skew Weyl modules.

     Given the importance of skew Weyl modules in our proofs, let us describe briefly the
nature of their definition and the fundamental results about them in [ABW]. Only a bare
sketch is given here. A thorough discussion can be found in [ABW, section II] to which we
will refer freely. Let Dt and Λt respectively denote the t-fold divided and exterior power
functors. So for example, Dt (F ) is the t-fold divided power of the defining representation
F of GL(F ). For a skew partition λ/µ, let

                             Dλ/µ = Dλ1 −µ1 ⊗ Dλ2 −µ2 ⊗ . . .

and similarly for exterior powers. Then [ABW] defines Kλ/µ as the image of a generalized
symmetrizer map
                                   d′λ/µ : Dλ/µ −→ Λλ̃/µ̃ .

A concise (though informal and somewhat imprecise) way to think of the map d′λ/µ is
that it is “comultiplication in the divided power algebra along the rows of λ/µ followed by
multiplication in the exterior algebra along the columns of λ/µ.”

     [ABW, Theorem II.3.16] proves two important results that permit us to think about
the skew Weyl modules in two different ways. First, this theorem explicitly describes a
“standard basis” {d′λ/µ (XT )} for Kλ/µ (F ) in terms of standard tableaux T of shape λ/µ.
(For us, entries in a standard tableau—taken from a basis of the defining representation
F —will increase weakly along rows and strictly along columns. Note that [ABW] calls
such tableaux “co-standard.”) The second important result is a description of Kλ/µ by
generators and relations in Dλ/µ . See [ABW, pp. 234-5 and pp. 226-9] for details. Both
these results will be crucial in proving the main results in this paper.

     Now let us record an important general fact about the existence of certain filtrations
of skew Weyl modules proved independently in [Kouwenhoven] and [Boffi].

     FILTRATION THEOREM Any skew Weyl module Kλ/µ has a characteristic-free filtra-
tion such that the filtration factors are isomorphic to ordinary Weyl modules, i.e., those
corresponding to partitions.

                                             6
    Such a filtration is called a Weyl filtration. Note that tensor products of Weyl modules
can also be regarded as skew Weyl modules, so the theorem applies to them too. In the
proofs of the main results we will only need some special cases of the Filtration Theorem,
in which the necessary filtrations are constructed explicitly in [AB1, Section 3].

      Stability of Kλ/µ (F ) under variation of rank of F . The [ABW] construction of the
modules Kλ/µ (F ) “does not depend” on the rank n of F . To make this precise let E be a
free abelian group of finite rank N > n and recall the functor dN,n of [Green, Section 6.5].
dN,n not only takes Kλ/µ (E) to Kλ/µ (F ) but it also takes the entire apparatus involved
in the definition of Kλ/µ (E) (i.e., the modules and the maps) to that involved in defining
Kλ/µ (F ). Further, dN,n takes a Weyl filtration of Kλ/µ (E) to one of Kλ/µ (F ). (Note that
a filtration factor Kν (E) will become 0 under dN,n if n is smaller than the number of rows
in ν.) Perhaps a better way to express the “irrelevance of F ” is to note the following. All
the constructions in [ABW] and [Boffi] are functorial in F , i.e., all the involved objects are
functors and all the involved maps are natural transformations between functors. So these
constructions are the “same” regardless of which F (free abelian of finite rank) they are
applied to.

     We will occasionally need to mention linear duals of Weyl modules (“dual Weyl mod-
ules” for short). The standard notation for the dual Weyl module with largest weight λ is
IndGB λ. The reason is that this module is also obtained by first extending the character λ to
a Borel subgroup B, and then inducing the character from B to the whole group G, which
for us is GLn . See, e.g., [Jantzen]. (Note that Jantzen uses the short notation H 0 (λ), mo-
tivated by yet another construction of a dual Weyl module as the space of sections of a line
bundle on the flag variety.) Again we will deviate from the standard notation and follow
[ABW] by using Lλ̃ (F ), or just Lλ̃ , to denote IndGB λ. Note that [ABW] calls these Schur
modules. A discussion parallel to the one above for Weyl modules is valid for these Schur
modules (functoriality, definition and filtrations of skew Schur modules, stability under
variation of rank of F , etc.). We will only need to make limited use of ordinary dual Weyl
modules. One fact we will use is that Kλ (F ) and Lλ̃ (F ) are contravariant duals of each
other. For example, combine [ABW, Proposition II.4.1], with an isomorphism F ≃ F ∗ .

     Notes. (1) Given a representation V of a groups G, the linear dual V ∗ also becomes a
left G-module, called the contravariant dual of V , by composing the natural (right) action
of G on V ∗ with an antiautomorphism of G. Usually this antiautomorphism is taken to
be the group inverse, but we will take it to be the transpose of a matrix in G = GLn . This
choice ensures that the contravariant dual of any polynomial representation of a certain
degree is also a polynomial representation of the same degree. The notion of a polynomial
representation is recalled below. (2) Taking the transpose of a matrix requires choosing an
isomorphism F ≃ F ∗ , as we did above, so the contravariant duality we use is not functorial
in F , unlike the formulation in [ABW, Proposition II.4.1]

     Let us now discuss the Schur algebra S(n, r) and its connection with the representation
theory of GLn = GL(F ). A representation V of GLn is called a polynomial representation
(of degree r) if the entries of the matrix by which an arbitrary g ∈ GLn acts on V are

                                              7
polynomial functions (of degree r) of the entries of the matrix g. Kλ/µ (F ) is a polynomial
representation of GL(F ) of degree |λ| − |µ| (similarly for Schur modules). The full subcat-
egory of polynomial representations of GLn of degree r is equivalent to the category of left
modules of the Schur algebra S(n, r). See [Green, Chapter 2] for a discussion. So Weyl
and Schur modules can be regarded as modules over Schur algebras S(n, r) for appropriate
r. The main use of this equivalence for us will be in analyzing Ext groups, which will be
our next topic.

     Ext groups. Our primary interest will be in the groups ExtiGLn (Z) (Kλ , Kµ ) for
dominant weights λ and µ. In the course of arguments, we will more generally need
to consider groups of the type ExtiGLn (Z) (K1 , K2 ), where K1 and K2 are representations
having Weyl filtrations. When no confusion is likely, the subscript GLn (Z) will be dropped
from the notation.

     Here is how the Schur algebras S(n, r) enter the picture. While computing the groups
Exti (Kλ , Kµ ), we can (and will in all the main proofs) assume the following without loss
of generality. We can take λ and µ to be partitions (by tensoring with a suitable power
of the determinant) with the same number of boxes (since the action of the center of
GLn breaks up the category of GLn -modules into a direct sum by degree). For the more
general Exti (K1 , K2 ) that we need to consider, the same reasoning allows us to assume
that K1 and K2 are polynomial representations of the same degree r. Since such K1
and K2 can be regarded as modules over the algebra S(n, r), we may also contemplate
the group ExtiS(n,r) (K1 , K2 ). Happily [Donkin1] proves that the two kinds of Ext groups
coincide. In fact Donkin proves this result for any Schur algebra, not just S(n, r), and
for any representations K1 and K2 of that Schur algebra. Note further that even though
[Donkin1] proves the result over algebraically closed fields, the result extends easily to
the integral setting by universal coefficients, as made explicit in [Kulkarni1]. We will use
Donkin’s theorem without further comment. In particular note that any argument about
Ext groups for GLn that requires considering the involved representations as modules over
a Schur algebra will need to use Donkin’s theorem. Let us now gather several results of a
general nature about the Ext groups of interest.

     To start with let us remark that for finitely generated representations M and N ,
the groups Exti (M, N ) for i > 0 are all finite. Proving this will involve a comparison
with extension of scalars to Q. The stated result follows from Donkin’s theorem (which
shows that the Ext groups are finitely generated, e.g., on account of the appropriate Schur
algebra being free of finite rank over Z) combined with semisimplicity of representations
over Q and the Universal Coefficient Theorem. For a statement of this theorem for group
schemes see [Jantzen, I.4.18a] and for a Schur algebra formulation, see [AB2, Theorem
5.3]. (Applying the Universal Coefficient Theorem requires M and N to be Z-free, but one
easily reduces to this case by taking the quotient of M and N by their respective torsion
submodules Mtor and Ntor , and then considering the appropriate long exact sequences of
Ext groups.) We will also need to use the Universal Coefficient Theorem in some other
places to relate integral Ext groups with modular ones.

                                             8
    Let us now record an important result due to Cline-Parshall-Scott-van der Kallen
[CPSvdK, Corollaries 3.2 and 3.3].

    VANISHING THEOREM. (Cline-Parshall-Scott-van der Kallen) Exti (Kλ , Kµ ) = 0 unless
λ < µ or (λ = µ and i = 0).

     Remarks. (1) The importance of this result for the knowledege of Ext groups is clear.
In this paper we will need to use the result only in the case λ = µ. (2) The integral
result as formulated above is not stated explicitly in [CPSvdK], but it is immediate from
the modular result stated and proved there. Alternatively, by imitating later arguments
of Cline-Parshall-Scott or Irving, one can give an easy direct proof of the result over
Z using the Schur algebra setting. These authors prove similar vanishing results (over
fields) respectively in the general setting of “highest weight categories” [CPS] and “BGG
categories” [Irving]. See [CPS, Lemma 3.8b] and [Irving, Proposition 4.4].

    A key technical tool used to handle Ext groups in this paper will be the the following
theorem from [Kulkarni1].

     SKEW REPRESENTATIVE THEOREM. For any polynomial representation X and for a
partition λ containing a partition µ,

                           Exti (Kλ , Lµ̃ ⊗ X) ≃ Exti (Kλ/µ , X).

     Remark. Note the necessity of the tacit assumption on n mentioned earlier, namely
n ≥ number of rows in λ. If this assumption were false, Kλ would vanish, whereas the right
hand side need not. This is because λ/µ may well have fewer rows than λ, possibly leading
to nonzero Ext groups on the right hand side. (The necessary assumption on n is made for
the whole paper at the end of the second paragraph on p. 253 in [Kulkarni1], but it should
have been included in the statements of the theorems there as well.) The “irrelevance of
n” for the results in this paper is discussed after the proof of the next proposition.

    The next proposition is a slight strengthening of a special case of the following result.
[Green, Section 6.5] proves that if N > n ≥ r, then the functor dN,n is an equivalence of
categories of modules over the Schur algebras S(N, r) and S(n, r). In particular it preserves
Ext groups over these Schur algebras and by Donkin’s theorem also over the corresponding
general linear groups.

    PROPOSITION 1.1. For partitions λ and µ, let N > n ≥ the number of rows in λ and
number of rows in µ. Let E and F be free abelian groups of rank N and n respectively.
Then we get the following isomorphisms via the functor dN,n of [Green, Section 6.5].

                  ExtiGL(E) (Kλ (E), Kµ(E)) ≃ ExtiGL(F ) (Kλ (F ), Kµ(F )).

     Proof. [AB2, Section 4] gives a resolution of Kλ (E). The terms of this resolution are
direct sums of modules of the form Dν (E) (i.e., direct sums of tensor products of divided
powers of E), where ν has at most as many nonzero parts as λ. The construction of this
resolution is functorial. So the preceding sentences in this proof remain valid after replacing

                                              9
E by F and in fact the two resolutions are the “same.” Speaking more precisely, the functor
dN,n applied to the [AB2] resolution of Kλ (E) gives the [AB2] resolution of Kλ (F ). In
particular Dν for the same ν and the same direct sums appear in either resolution.

     Note that by the hypothesis on N and n, all the ν that appear in the terms of either
resolution are weights for GL(E) as well as for GL(F ). (In fact we can arrange all ν to be
≥ λ under the dominance order, but we don’t need this stronger fact.) This ensures that
all the Dν are projective modules over the appropriate Schur algebra, see [AB2]. Thus
we may compute the Ext groups under consideration by applying the appropriate Hom
to these two resolutions. Now the functor dN,n gives a chain map from the Hom complex
involving E to that involving F . We can see as follows that this map is an isomorphism.
First, by [AB2, Section 2], Hom(Dν (F ), Kµ (F )) is isomorphic to the ν-weight submodule
of Kµ (F ); in fact this isomorphism is natural so in particular the statement holds if we
replace every F by E. Secondly the functor dN,n does not change a ν-weight submodule
if ν is a weight for GLn (and annihilates it otherwise, but this does not happen in our
situation). This completes the proof of Proposition 1.1.

     Remark. The above result is true by the same argument if one replaces Kλ and Kµ
by skew Weyl modules (or even more generally, functors with finite Weyl filtrations). n
should be taken at least as much as the number of nonezero rows in the corresponding
skew partitions (for the more general version, at least as big as the number of rows in the
partitions corresponding to all Weyl modules that occur as filtration factors in the two
modules). One just has to construct suitable projective resolutions for these modules from
such resolutions for the individual filtration factors. (Or, in case of skew Weyl modules,
use the projective resolutions already constructed in [AB2].)

      Beyond its use in proving Proposition 1.2, Proposition 1.1 is not really necessary
for the rest of the paper. But let us use the logical opportunity it provides to discuss
the minimal relevance of the n in GLn for the main results in this paper regarding Ext
groups between Weyl modules. Proposition 1.1 is not enough by itself to address this issue
because the proofs will more generally employ Ext groups involving modules with Weyl
filtrations. In view of Green’s result quoted before Proposition 1.1, we can a priori take n
to be large enough. After a “stable” result about Ext groups between two Weyl modules
is proved, Proposition 1.1 then extends such a result to all n for which the partitions
involved in the statement of the result are weights for GLn . But a better reasoning is to
simply note that the proofs of the main results stay valid for any such “appropriate” value
of n. (For details on how various ingredients involved in the proofs behave vis a vis the
value of n, see the Remark after Proposition 1.1, the Remark after the statement of the
Skew Representative Theorem above, and the paragraph discussing stability of skew Weyl
modules under variation of rank of F .)

    Before turning to Proposition 1.2 we need to record the following isomorphisms of
Ext groups. First, by contravariant duality, Exti (Kλ , Kµ ) ≃ Exti (Lµ̃ , Lλ̃ ). Combining this
with the Ext-preserving functor Ω (a weak form of Howe duality) from [AB2, Section 7],
one gets the following conjugate symmetry of Ext groups. Exti (Kλ , Kµ ) ≃ Exti (Kµ̃ , Kλ̃ ).

                                              10
Note that one may need to increase n (valid by Proposition 1.1) so that the conjugate
partitions are weights for GLn .

      PROPOSITION 1.2. (column and row removal principles) Suppose the lengths of the
first columns (rows) of partitions λ and µ are equal. Let λ′ and µ′ be the partitions ob-
tained by removing the first columns (rows) of λ and µ respectively. Then Exti (Kλ , Kµ ) ≃
Exti (Kλ′ , Kµ′ ).

     Proof. Let us first prove the column removal principle. Call the common length
of the first columns m. Evidently m ≤ n. By Proposition 1.1 we can change n to m.
Then Kλ = Kλ′ ⊗ det, Kµ = Kµ′ ⊗ det, where det is the one-dimensional determinant
representation. The claim is immediate by canceling the determinant. Row removal now
follows by conjugate symmetry of Ext groups. (It may be necessary to increase and then
restore n, again using Proposition 1.1.)

     Remark. Results similar to the two Propositions above, but about decomposition
numbers in characteristic p, have been proved in [Green] and [James] respectively. Let us
outline an approach to these earlier results using certain Ext groups, namely those between
Weyl modules and simple modules in characteristic p. The analogues of Proposition 1.1
and the column removal principle for these “mixed” Ext groups are easily obtained by
repeating the arguments above. Combining this with the well-known connection between
Euler characteristics built out of such Ext groups and decomposition numbers, one gets
[Green, Theorem 6.6e] and [James, Theorem 1]. For [James, Theorem 2] (row removal
principle for decomposition numbers), additional arguments seem necessary, as the functor
Ω is not available in this situation. For instance one can use the connection with tilting
multiplicities obtained by Donkin to get the desired result. Let us skip the details.



               2. ON THE EXTENSIONS BETWEEN WEYL MODULES

     This section contains the main results of this paper concerning Ext groups between
certain Weyl modules for GLn over the integers. The significance of these results for
modular representation theory is discussed in the Remarks after each result.

    Let us outline the general strategy that we will use to study Ext groups between Weyl
modules. As remarked before, one can without loss of generality take the corresponding
two dominant weights to be partitions with the same number of boxes. Now the Skew
Representative Theorem [Kulkarni1] gives the following isomorphism

                          Exti (Kλ , Lµ̃ ⊗ Kν ) ≃ Exti (Kλ/µ , Kν ),

where λ, µ, ν are partitions with the diagram of µ contained in that of λ and |ν| = |λ| − |µ|.
(Let me again mention that following [ABW], Lµ̃ denotes the dual Weyl module with
highest weight µ.) Notice that the degree of representations occuring on the LHS is |λ|
whereas that on the RHS is |λ| − |µ|. This leads to the hope of somehow analyzing Ext
groups recursively, using the just mentioned reduction in degree. A difficulty involved

                                             11
in this approach is that one has to deal with more complicated representations, namely
Kλ/µ and Lµ̃ ⊗ Kν . One can try to deal with these two objects piece by piece by working
with their filtrations. One does have a Weyl filtration of Kλ/µ which, however, is very
complicated in general. Worse still, no information in general is known about the filtrations
of the latter.

      One can get around both these difficulties by choosing Lµ̃ to be an exterior power Λt
of the defining representation, i.e., by taking µ = 1t , a single column of length t. Since
Λt is a Weyl module as well, Λt ⊗ Kν also has a Weyl filtration. Weyl filtrations of both
these modules (i.e., of Kλ/1t and Λt ⊗ Kν ) are constructed explicitly in [AB1, Section 3].
These filtrations are fairly simple to describe and one has a very easy description of the
Weyl modules that occur as filtration factors by Pieri-type rules. In the simplest new case
(treated in Theorem 2.1) one can inductively control the maps induced on Ext groups as
we patch together the Weyl modules in these filtrations. In order to seriously entertain the
idea of computing all Ext groups between Weyl modules using this technique, one must
be able to grapple successfully with spectral sequences arising from Ext groups applied to
filtered complexes whose terms have Weyl filtrations. This seems difficult in general. Here
is what one can do at present using the approach outlined above.

     (1) Theorem 2.1 gives a complete determination of the groups Exti (Kλ , Kµ ) where
µ − λ is a positive root α of GLn . This is the simplest case left open after the [CPSvdK]
vanishing theorem. (2) For general λ < µ, one can circumvent the difficulty involved
in dealing with filtrations that was mentioned above by attempting a less ambititious
task. One can compute a “multiplicative Euler characteristic” χ defined as the alternating
product of cardinalities of Ext groups between a given pair of Weyl modules. One first
gets a recursive algorithm to do this computation which in turn leads to a simple formula
for χ. This is done in [Kulkarni2]. The base of the recursion is precisely the case treated
by Theorem 2.1. (3) The Skew Representative Theorem takes a particularly simple form
if the first partition is a single column. Using this, one can show that Ext1 (Λ|λ| , Kλ ) is
always cyclic. A little more reasoning enables one to explicitly calculate the order of this
Ext1 in terms of λ. By contravariant duality and conjugate symmetry of Ext groups, one
also determines three other types of Ext1 groups. This is the content of Theorem 2.2.

      Let us tackle Theorem 2.2 first as its proof is much shorter and gives a quick demon-
stration of the use of two tools that will be used much more substantially while proving
Theorem 2.1: (1) the Skew Representative Theorem and (2) the [ABW] description of Weyl
modules by generators and relations. Theorem 2.2 computes the group Ext1 (Λ|λ| , Kλ ).
Note that if the partition λ has only one column, then Kλ = Λ|λ| and this Ext group
is trivial by the [CPSvdK] vanishing theorem. So let us assume that λ has at least two
columns.

     THEOREM 2.2. The group Ext1 (Λ|λ| , Kλ ) between an exterior power of the defining
representation and another Weyl module is always cyclic and its order is the gcd g of
integers
                                        a+1
                                                                ,
                            gcd(a + 1, lcm(1, 2, 3, . . . , b))

                                             12
where a, b are the lengths of any two consecutive columns of λ with a ≥ b.

     COROLLARY. The statement of Theorem 2.2 stays valid if we replace the Ext group there
by any of the following: Ext1 (Lλ̃ , Λ|λ| ), Ext1 (Kλ̃ , D|λ| ) and Ext1 (S|λ| , Lλ ), where D and S
denote respectively the divided and symmetric powers of the defining representation. (This
follows from the fact that the four Ext groups in question are isomorphic by contravariant
duality and conjugate symmetry.)

      Proof of Theorem 2.2. If λ has exactly two columns of lengths a ≥ b, then by [AB2,
Section 9] Ext1 (Λ|λ| , Kλ ) is cyclic and its order is as given above. If λ has more than
two columns, pick one of them, say of length ℓ, and call the partition left by erasing that
column λ′ . Take the exact sequence 0 → Kλ → Kλ′ ⊗Λℓ → X → 0 obtained from the Weyl
filtration of Kλ′ ⊗Λℓ given in [AB1, Section 3]. Apply Hom(Λ|λ| , −) and take the associated
long exact sequence. It begins as follows. 0 → Ext1 (Λ|λ| , Kλ ) → Ext1 (Λ|λ| , Kλ′ ⊗ Λℓ ). By
the Skew Representative Theorem, Ext1 (Λ|λ| , Kλ′ ⊗ Λℓ ) ≃ Ext1 (Λ|λ′ | , Kλ′ ). Now we can
repeat the process until only two columns are left. Clearly these can be arranged to be
any two columns of the original partition λ. So we have proved that the desired Ext1 is
cyclic and that its order divides g. To show that the order equals g, we will instead use
Ext1 (Kλ̃ , D|λ| ), which is isomorphic to the desired Ext1 .

     Let us recall some facts from [ABW, Section II] about Kλ̃ (see also Section 3, specif-
ically the beginning of the proof of Lemma C and Note 2 at the end of Example 2 in the
same proof). We have d′λ̃ : Dλ̃ →  → Kλ̃ . Label a basis of the defining representation as
                                                      (λ̃ )   (λ̃2 )
e1 , e2 , . . . . Then we have a cyclic generator e1 1 ⊗ e2            ⊗ . . . for Dλ̃ (and hence one for
Kλ̃ ) and the kernel of d′λ̃ is generated by elements

                                   (a)    (t) (b−t)
                           . . . ⊗ ek ⊗ ek ek+1 ⊗ . . . ,       1 ≤ t ≤ b,

where k, k + 1 are any two consecutive rows of the partition λ̃ of lengths a ≥ b respectively
                                      (λ̃ )
and “. . .” indicates tensor factors ei i in all positions i other than k and k + 1.

     By the Universal Coefficient Theorem it suffices to show that g is the largest integer
modulo which there is a nonzero equivariant map Kλ̃ → D|λ| . So let us work over Z/mZ
and characterize the integers m for which such a map exists. Since all weight spaces of D|λ|
are one-dimensional, Hom(Dλ̃ , D|λ| ) is generated by the map taking the cyclic generator
 (λ̃ )   (λ̃ )                               (λ̃ ) (λ̃ )
e1 1 ⊗ e2 2 ⊗ . . . to the basis element e1 1 e2 2 . . . of the relevant weight space. Clearly
this map is just multiplication in the divided power algebra. This map will descend to
Kλ̃ exactly when it kills the generators of the kernel of d′λ̃ listed above. Recalling how to
multiply in the divided power algebra, this in turn will happen exactly when a+t
                                                                                      
                                                                                    t   = 0 in
Z/mZ for all 1 ≤ t ≤ b, where a ≥ b are lengths of any two consecutive rows of λ̃, i.e.,
consecutive columns of λ. Fixing a and b, the gcd of the resulting b binomial coefficients is
easily seen to be the number displayed in the statement of Theorem 2.2, thus completing
the proof.

                                                 13
    Remarks. (1) It should be clear that the argument in the previous paragraph can
prove all of Theorem 2.2, making the first paragraph of the proof redundant. (The first
paragraph was nevertheless included to illustrate how the Skew Representative Thorem
may be used.) Such a streamlined proof would also recover as a special case the result
from [AB2, Section 9] quoted in the first paragraph. Actually the argument in the previous
paragraph is close to the one in [AB2], just formulated differently and applied in a more
general situation.

     (2) In fact one can get an even more general result from the argument in the last
paragraph of the proof. Since skew Weyl modules are also cyclic and have a description
by generators and relations, one can easily calculate by the same reasoning Ext1 between
any skew Weyl module and a divided power of the defining representation (and three other
types of Ext groups by the argument in the Corollary). This group is also cyclic and
its order is equal to the gcd of several binomial coefficients determined by lengths of and
overlap between successive pairs of adjacent rows of the skew partition in question. (The
simplification contained in the last sentence of the proof will generally not be available
here.)

      (3) Let us work in prime characteristic p in this and the next paragraph. Again using
the Universal Coefficient Theorem, the Corollary to Theorem 2.2 shows that Hom(S|λ| , Lλ )
always has dimension 0 or 1, and that it is one-dimensional exactly when p divides the
number appearing in Theorem 2.2 for each pair of successive column lengths a, b of the
partition λ. Thus we get a necessary and sufficient condition for the existence of a homo-
morphism from a symmetric power of the defining representation to a dual Weyl module
Lλ of largest weight λ̃. This condition is easier to test by writing the length of each row
of weight λ̃ (we are expressing everything in terms of the highest weight λ̃) p-adically and
displaying the digits for successive rows of λ̃ in a kind of tableau form. Thus the i-th col-
umn from right of this “digit tableau” displays the pi -place digits of successive row lengths
of λ̃. The condition obtained from Theorem 2.2 then amounts to the requirement that
in the digit tableau each digit strictly above and weakly to the right of any nonzero digit
must be p − 1.

     Note that the existence of a homomorphism from a symmetric power of the defining
representation to a dual Weyl module Lλ implies in particular that the simple module with
highest weight λ̃ is a composition factor of that symmetric power, though of course the
former is a significantly stronger requirement. It is interesting to compare the composition
factors of S|λ| – known as a result of the known GLn -submodule structure of symmetric
powers [Doty] – with the condition in Theorem 2.2. This is easier to state using the p-
adic digit tableau above. (This language is modelled on that in [Krop], which also proves
the same submodule structure for symmetric powers under the action of the full matrix
semigroup. The idea of exploiting one-dimesionality of weight spaces in symmetric/divided
powers too was taken from the independent works of Doty and Krop.) The highest weights
of the composition factors of S|λ| are characterized by each column of digits in the digit
tableau of the highest weight having the form of a string of (p − 1)’s possibly ending with
a single different digit. Clearly this is a weaker condition than the one in the previous

                                             14
paragraph. (Note that we always take the n in GLn as large as it needs to be, so the
condition on the size n in the enumeration of composition factors of S|λ| is automatically
met.)

     THEOREM 2.1. Suppose λ and µ are dominant weights for GLn such that µ − λ is a
positive root α. Let ρ be half the sum of positive roots. Then Exti (Kλ , Kµ ) is cyclic of
order hλ + ρ, αˇi + 1 for i = 1 and vanishes for all other i.

      To facilitate the proof of Theorem 2.1, let us translatePthis statement into combina-
torial language and make some reductions. We have λ =            λi ǫi , where ǫi is the weight
consisting of 1 in the i-the position and zeroes elsewhere. Let α be the positive root ǫr − ǫs
for r < s. Then the claimed order of Ext1 (Kλ , Kµ ) is λr − λs + s − r + 1. As noted before,
without loss of generality we can take λ and µ to be partitions with the same number of
boxes. Then the Young diagram of µ is obtained from that of λ by raising a single box
from the end of the s-th row up to the end of the r-th row. The number λr − λs + s − r + 1
is easily seen to be the hook length of the box in the r-th row and λs -th column of the
diagram of λ (or the diagram of µ). (Recall that the hook length of a box in the Young
diagram of a partition is the total number of boxes to the right and below it, including
itself.) Now by appealing to the row and column removal principles, we may further strip
off the r − 1 identical first rows and λs − 1 identical first columns from λ and µ without
changing the Ext groups. Then the assertion about Ext1 (Kλ , Kµ ) amounts to saying that
this group is cyclic of order equal to the hook length of the box in the top left corner of
the diagram of λ (or µ). Let us set up some notation so we can precisely state and prove
Theorem 2.1 in this equivalent combinatorial form.

      Let ai , pi for i = 1, . . . , k be positive integers with a1 > a2 > . . . > ak . Let λ =
ap11. . . apkk 1, µ = (a1 + 1)ap11 −1 ap22 . . . apkk and ν = ap11 . . . apkk . In words, ν is a partition
whose diagram consists of k rectangular blocks of rows; λ and µ are obtained by adding a
single box to the first column and the first row of ν respectively. Let hi be the hook length
of the (p1 +. . .+pi−1 +1)-th box from top in the first column of λ, i.e., the top left box in the
i-th rectangular block in the diagram of λ. Let ℓi be the hook length of the (p1 +. . .+pi )-th
box from top in the first column of ν, i.e., the bottom left box in the i-th rectangular block
in the diagram of ν. For future use, note that ℓj = hj −pj = aj +pj+1 +pj+2 +. . .+pk . Now
we can state and prove an equivalent form of Theorem 2.1 using this notation. For technical
convenience we will exclude the Hom case from the statement. (See the paranthetical note
at the end of the first paragraph of the proof.) We may do so since it is already known
that Hom(Kλ , Kµ ) = 0 for λ 6= µ.

       THEOREM 2.1. (Combinatorial version) For λ, µ as in the preceding paragraph,

                    Ext1 (Kλ , Kµ ) = Z/h1 Z,       Exti (Kλ , Kµ ) = 0 for i > 1.

     Proof. Note that µ is obtained by removing the single box from the last row of λ and
placing it at the end of the first row. By induction we assume the result for all such pairs
(λ, µ) of smaller degree. This induction starts in degree 1. Here ν must be empty, λ = µ =
a single box and h1 = 1. We need to show that all Exti vanish for i > 0, which is immediate

                                                   15
by the [CPSvdK] vanishing theorem. (This case does not exist in the original formulation
of Theorem 2.1, but does make sense for the combinatorial version we are proving. Also
note that in this case Hom is nonzero, which is why the Hom case was excluded in the
statement of the theorem. Alternatively we could have started the induction in degree 2,
where again there is just one case, namely when ν consists of a single box. Then one needs
to show that Exti (Λ2 , D2 ) is Z/2Z for i = 1 and 0 otherwise. This is immediate, e.g., from
the projective resolution 0 → D2 → F ⊗ F → Λ2 → 0. But in fact this case is subsumed
in the inductive step below.)

     We will use the explicit Weyl filtrations for Kλ/1 and Kν ⊗ F constructed in [AB1,
Section 3]. The filtration factors are described by Pieri-type rules. The factors for Kλ/1
correspond to partitions obtained by deleting one box from the diagram of λ. The factors
for Kν ⊗ F correspond to partitions obtained by adding one box to the diagram of ν.

     The Skew Representative Theorem implies that Exti (Kλ , F ⊗ Kν ) ≃ Exti (Kλ/1 , Kν ).
So let us consider the [AB1] Weyl filtrations of Kλ/1 and F ⊗ Kν . These give us the
following exact sequences: 0 → Kν → Kλ/1 → M → 0, 0 → Kµ → F ⊗ Kν → N → 0
and 0 → P → N → Kλ → 0, where the Weyl modules occuring in grM , grN and grP
are prescribed by Pieri’s rules. We will analyze certain long exact sequences associated to
these short exact sequences.

     First apply Hom(−, Kν ) to 0 → Kν → Kλ/1 → M → 0 and take the corresponding
long exact sequence. By [CPSvdK], Exti (Kν , Kν ) = 0 for i 6= 0. Our inductive hypothesis
combined with the row removal principle applies as we patch together the Weyl modules
occuring in grM and take the corresponding long exact sequences of Ext groups with Kν .
We get as a result that Exti (M, Kν ) = 0 for i 6= 1 and that the cardinality of Ext1 (M, Kν )
equals ℓ1 . . . ℓk . Known information now forces Exti (Kλ/1 , Kν ) = 0 for i > 1. Therefore
the long exact sequence reduces to

  0 −→ Hom(Kλ/1 , Kν ) −→ Hom(Kν , Kν ) −→ Ext1 (M, Kν ) −→ Ext1 (Kλ/1 , Kν ) −→ 0.

As Kν occurs once in gr(Kλ/1 ), the first two Hom terms are both isomorphic to Z. There-
fore the map between them is given by an integer. Now we state

    LEMMA A. The map Hom(Kλ/1 , Kν ) → Hom(Kν , Kν ) induced by the inclusion Kν ֒→
Kλ/1 arising from the [AB1] Weyl filtration of Kλ/1 is given by the integer ℓ1 . . . ℓk .

     Assuming Lemma A, Ext1 (M, Kν ) is forced to be isomorphic to Z/ℓ1 . . . ℓk Z and
Ext1 (Kλ/1 , Kν ) is seen to vanish. To sum up, modulo Lemma A, we have proved that
Exti (Kλ/1 , Kν ) = 0 for i 6= 0. Therefore Exti (Kλ , F ⊗ Kν ) = 0 for i 6= 0 by the Skew
Representative Theorem.

     Next we apply Hom(Kλ , −) to 0 → P → N → Kλ → 0 and take the correspond-
ing long exact sequence. Exti (Kλ , Kλ ) = 0 for i 6= 0 by the [CPSvdK] vanishing theorem.
Again our inductive hypothesis combined with row removal principle applies as we patch to-
gether the Weyl modules occuring in grP and take the corresponding long exact sequences

                                             16
of Ext groups of Kλ with the resulting modules. We get as a result that Exti (Kλ , P ) = 0
for i 6= 1 and that the cardinality of Ext1 (Kλ , P ) equals h2 . . . hk . Known information now
forces Exti (Kλ , N ) = 0 for i > 1. Therefore the long exact sequence reduces to

     0 −→ Hom(Kλ , N ) −→ Hom(Kλ , Kλ ) −→ Ext1 (Kλ , P ) −→ Ext1 (Kλ , N ) −→ 0.

As Kλ occurs once in grN , the first two Hom terms are both isomorphic to Z. Therefore
the map between them is given by an integer. Now we state

     LEMMA B. The map Hom(Kλ , N ) → Hom(Kλ , Kλ ) induced by surjection N →           → Kλ
arising from the [AB1] Weyl filtration of F ⊗ Kν is given by the integer h2 . . . hk .

     Assuming Lemma B, Ext1 (Kλ , P ) is forced to be isomorphic to Z/h2 . . . hk Z and
Ext1 (Kλ , N ) is seen to vanish. So modulo Lemma B, we have proved that Exti (Kλ , N ) = 0
for i 6= 0.

     Now we are ready to apply Hom(Kλ , −) to 0 → Kµ → F ⊗ Kν → N → 0 and analyze
the resulting long exact sequence. Clearly Hom(Kλ , Kµ ) = 0. We already know that
Exti (Kλ , N ) = 0 and Exti (Kλ , F ⊗ Kν ) = 0 for i 6= 0. Therefore Exti (Kλ , Kµ ) is forced
to vanish for i > 1 and the exact sequence reduces to

           0 −→ Hom(Kλ , F ⊗ Kν ) −→ Hom(Kλ , N ) −→ Ext1 (Kλ , Kµ ) −→ 0.

As Kλ occurs once as a factor in the filtrations of F ⊗ Kν as well as N , the two Hom terms
are both isomrphic to Z. Therefore the map between them is given by an integer. Now we
state

      LEMMA C. The map Hom(Kλ , F ⊗ Kν ) → Hom(Kλ , Kλ ) induced by the surjection
F ⊗ Kν →      → Kλ arising from the [AB1] Weyl filtration of F ⊗ Kν is given by the integer
h1 . . . hk .

     Now Lemma B and Lemma C together imply easily that the map Hom(Kλ , F ⊗Kν ) →
Hom(Kλ , N ) is given by the integer h1 . Therefore Ext1 (Kλ , Kµ ) ≃ Z/h1 Z. Thus Theorem
2.1 is proved modulo Lemmas A, B and C. The proofs of these lemmas are similar to each
other and somewhat intricate. They will be presented in the next section.

     Remarks. (1) Let us discuss the significance of Theorem 2.1 for modular representation
theory. So we will work over a field of characteristic p until further notice. Consider the
dot action of the affine Weyl group Wp on weights. Let λ be a dominant regular weight
in an alcove C and s the reflection in a wall of C such that λ < s.λ (and so s.λ is also
dominant). Then Kλ and Ks.λ are called neighboring Weyl modules. It is known that for
any split reductive algebraic group Exti (Kλ , Ks.λ) is one dimensional for i = 0 or 1 and
vanishes otherwise. See, e.g., [Jantzen, II.7.19d]. The nonzero homomorphism is of interest
because, for instance, it is involved in an important conjecture of Jantzen. See [Andersen1].
Here is how Theorem 2.1 combined with the tranlsation principle can be used to recover
this Ext calculation for GLn . (This strategy is admittedly strange, since the stated result
was obtained using just translation functors, albeit in a little more substantial way. The

                                              17
point here is to observe that the case in Theorem 2.1 is enough to realize neighboring
modules between any two given adjacent dominant alcoves.) We have s.λ − λ = kα, a
positive multiple of a positive root α. Consider first the case k = 1, so the two weights are
as in Theorem 2.1. It is easy to see that p divides hλ + ρ, αˇi + 1 and then the Universal
Coefficient Theorem gives the desired modular Ext groups. Now suppose k > 1. Note that
by the translation principle Exti (Kλ , Ks.λ ) ≃ Exti (Kη , Ks.η ) for any dominant regular
weight η in C. We will choose η close to the wall separating C and s.C so as to reduce
to the case k = 1. For this first note that all weights between the two regular weights
λ and s.λ (on the straight line connecting them) except λ + (k/2)α are regular and lie
either in C or s.C. The exception, not necessarily an integral weight, is where the line
intersects the wall separating C and s.C. If k = 2t + 1 is odd, then let η = λ + tα and
then s.η = λ + (t + 1)α, reducing to the case k = 1. If k = 2t is even, then we may first
replace λ by λ + (t − 1)α and so s.λ by λ + (t + 1)α. In other words we may assume that
k = 2. Let α = ǫq − ǫr with q < r. Now take η = λ − ǫr . Then s.η = s.λ − ǫq . (If λ and
s.λ are partitions, k = 2 means s.λ is obtained by moving two boxes from a lower row of
λ to a higher row. Now η as above is simply obtained by erasing one of these two boxes
from λ and then s.η similarly has one box less than s.λ.) It is easy to check that η is in C
and that we are again in the case k = 1.

    A reason why Theorem 2.1 is of additional interest is as follows. The definition of
neighboring Weyl modules makes sense only if there are regular weights, which happens iff
p ≥ n, the Coxeter number for GLn . But even for small p, Theorem 2.1 still gives results
about Ext groups between Weyl modules whose dominant weights differ by a single root.

     (2) Continue with neighboring Weyl modules Kλ and Ks.λ as in Remark 1 but work
over Zp , the ring of p-adic integers. Let v be the largest power of p dividing hµ + ρ, αˇi,
where µ is a weight on the wall separating the alcoves containing λ and s.λ. About the
same time when the combinatorial version of Theorem 2.1 was first proved, Andersen
proved that for any split reductive algebraic group Ext1 (Kλ , Ks.λ) is cyclic of order pv
and all other Exti (Kλ , Ks.λ) vanish. See [Andersen3]. For GLn , Andersen’s result can be
recovered from Theorem 2.1 and base change to Zp using the same argument that was
used in Remark 1 to recover the weaker result on modular Ext. (As shown in [Andersen1]
translation functors work over Zp too.) Again the result over Zp cannot apply for small p.
But Andersen’s result and Theorem 2.1 together lead one to hope that the statement of
Theorem 2.1 should stay valid for any reductive algebraic group over Z. Granting the use
of translation, such a result (if true) can be thought of as a natural common generalization
of Theorem 2.1 and Andersen’s result. See the Introduction for an indication of some
possible approaches to proving such a result.

     (3) Now let λ and µ be as in the statement of Theorem 2.1, but work over a field of
characteristic p. Theorem 2.1 contains more information than is registered in the modular
calculation of the groups Exti (Kλ , Kµ ) indicated in Remark 1. The extra information is
the power of p dividing hλ + ρ, αˇi + 1. This power turns out to be the coefficient of ch(Kλ )
in the Jantzen sum formula for Kµ obtained from the determinant of the contravariant form
on integral Kµ . Actually in general this coefficient is encoded in the Euler characteristic χ

                                             18
defined in the discussion near the begining of this section, but for the case in Theorem 2.1
χ amounts to Ext1 due to the vanishing of other Exts. This connection with χ is explained
in [Kulkarni2]. It is unclear if the vanishing of higher Exts in Theorem 2.1 has any direct
representation theoretic significance.

     (4) The proof of Theorem 2.1 illustrates the lines along which one may hope to cal-
culate Ext groups in general using the Skew Representative Theorem. In view of the
discussion on neighboring Weyl modules, one case of interest is the generalization when
µ − λ = kα with k > 1. (This is a generalization because for neighboring Weyl modules
the k depends on the weight λ and the prime p.) The difficulties here are formidable, as
can be seen from the complexity of the answer calculated in [BF] for Ext1 in this case for
GL3 . Unlike the simple answer given by Theorem 2.1, the answer in [BF] involves taking
the gcd of many numbers (this is true even for the GL2 case in [AB2] that was used in
Theorem 2.2) and uses the lengths of all rows of λ.

     In the light of quickly mounting and seemingly inherent difficulties that one faces when
k > 1, the fact that one has such a simple answer over Z for k = 1 (and possibly valid for
other reductive groups too) acquires added interest. It is tempting to wonder if the k = 1
case can at least partially serve as a reasonable Z analogue of the notion of neighboring
Weyl modules.



                         3. PROOFS OF LEMMAS A, B AND C

     The strategy behind the proofs of the three lemmas is quite simple, but to carry it
out requires some notational and computational effort. Each lemma identifies the integer
giving a specific map between two Hom groups each of which is isomorphic to Z. The proofs
explicitly find a generator of the source Hom group (the hardest step), apply the map to
this generator, and inspect which multiple of the generator one gets in the target Hom
group. The hardest step comes down to explicitly finding and solving a linear system of
integer equations. What is noteworthy is that beyond keeping track of all the paraphernalia
required for bookkeeping, the lemmas offer no further difficulty. The computations stay
reasonable at all stages, in particular one does not have to resort to taking gcd ’s at any
point. This should be contrasted with what usually happens in this type of setting, e.g.,
see Remark 4 after the proof of Theorem 2.1. Further, one can give very similar (and
equally long) proofs for all three lemmas and all features occuring in such proofs (except
some straightening required in one step for Lemma A) can be already seen in the much
simpler special cases of Lemma C worked out below. Moreover, here we will be able to get
away with doing the hardest step only once (for Lemma C) and thus substantially shorten
the proofs of the remaining two lemmas.

    These facts suggest that there may be a more efficient way to organize these com-
putations, and perhaps even existence of a more conceptual explanation. The following
considerations might be relevant in this regard. Just like the answers claimed in the three
lemmas, several objects in the proofs are naturally indexed by k-tuples, where k is the

                                             19
number of rectangular blocks in the partition ν. It seems plausible that there should be a
simpler approach to proving these lemmas that uses induction on k. Such induction does
make an appearance in the proofs below, but only at the very end when one has to simplify
a laboriously obtained algebraic expression. In another direction, since the order of the
Ext1 in Theorem 2.1 arises ultimately from the three lemmas, it is interesting to look for
the origin of Andersen’s p-adic answer [Andersen3] in his proof. In his computation, a role
analogous to that of the three lemmas is played by [Andersen2, Lemmas 2.2 and 2.4]. To
prove these lemmas Andersen gives a short and slick argument using adjointness proper-
ties of translation functors. He then brings in the Weyl chracter formula to get the final
numerical form of the answer. It would be nice to be able to adapt his approach to the
integral situation (perhaps still working with one prime at a time, but letting the prime
to be arbitrary, i.e., allowing nonregular weights and thereby allowing more complicated
modules with Weyl filtration to arise upon translation).

      After these speculations let us turn to the proofs of the lemmas, beginning with
Lemma C. Throughout we will use the notation set up before the combinatorial version of
Theorem 2.1. Additionally, let us make two notes about terminology used throughout the
three lemmas. First, by “natural” maps, we will mean certain maps derived from the Weyl
filtrations analogous to Pieri rules in [AB1]. These are the maps with which we have to
compose to get the appropriate maps between Hom groups as indicated in the statements
of the lemmas. Secondly, note the following abuse of notation. Kν ⊗ F is isomorphic to
the skew Weyl module corresponding to the skew partition

                      (a1 + 1)p1 (a2 + 1)p2 . . . (ak + 1)pk 1/1p1 +...+pk ,

so for simplicity we will call this skew partition ν ⊗1. For example we will speak of tablueax
of shape ν ⊗ 1, the generalized symmetrizer map d′ν⊗1 , etc. In the proof of Lemma C, often
we will even write Kν⊗1 meaning, of course, Kν ⊗ F .

     Proof of Lemma C. We will explicitly find a generator f of Hom(Kλ , Kν⊗1 ), follow
the action of f with the natural surjection Kν⊗1 →→ Kλ , and see which multiple of the
identity we get in Hom(Kλ , Kλ ).

     Recall the results regarding skew Weyl modules summarized in [ABW, Theorem
II.3.16]. Following the notation there we have d′λ : Dλ →     → Kλ with relations in Dλ
corresponding to each pair of adjacent rows in λ. So f (i.e., the map we seek) comes from
a map g : Dλ → Kν⊗1 that sends these relations to 0. We will write a formula for a
general map g : Dλ → Kν⊗1 and solve the resulting constraints on g to find f . In these
calculations, we will have to rely very heavily on the material sketched on pp.234-6 in
[ABW]. More specifically, we will need (1) the definition of the “box” map to get relations
defining Kλ (these are described in general in Note 2 at the end of Example 2 below), and
(2) the procedure to “straighten tableaux” in Kν⊗1 , which in turn is based on the box map
associated to Kν⊗1 . (The second item is necessary as a systematic way to find the answers
but not necessary to verify them. However, straightening will play a more essential role
in the proof of Lemma A.) To undertand this material one should additionally look at the
careful treatment of the same topics in the dual case of “Schur modules” on pp.226-232

                                               20
of the same paper (statements of II.2.7 through II.2.16 and the proof of II.2.15). While
following all subsequent calculations involving tableaux it will be helpful to
write the algebraic expressions pictorially in tableau form.

     Label an ordered basis of F as e1 , e2 , . . . . Recall that for us standard tableaux (called
co-standard in [ABW]) will be fillings of Young diagrams with entries from the chosen
basis of F such that the entries increase weakly along rows and strictly along columns. In
what follows, we will for convenience identify any standard tableau with the correspond-
ing element of the appropriate tensor product of divided powers of F . For example, the
canonical tableau (i.e., the tableau with all e1 ’s in the first row, all e2 ’s in the second row
                                                      (λ )    (λ )
and so on) Cλ of shape λ is identified with e1 1 ⊗ e2 2 ⊗ . . . ∈ Dλ . By the method of
weight submodules [AB2, pp.177-8], any map from Dλ is specified completely by its action
on Cλ (since Cλ generates Dλ as a GL(F )-module) and such a map may send Cλ arbi-
trarily into the λ-weight submodule of the target module. Together with the “standard
basis” for Kν⊗1 obtained from [ABW, Theorem II.3.16], this gives us the following basis
for Hom(Dλ , Kν⊗1 ).
          n                                                                     o
           Cλ 7→ d′ν⊗1 (Ti )  Ti a standard tableau of shape ν ⊗ 1 and weight λ .
                             


Thus a general map g : Dλ → Kν⊗1 may be written as Cλ 7→ i ci d′ν⊗1 (Ti ) with arbitrary
                                                                P
integers ci . It is not very hard to explicitly describe all the tableaux Ti . After that one
can explicitly write formulas for the maps {Cλ 7→ d′ν⊗1 (Ti )} in the above basis by using
appropriate polarizations (i.e., comultiplication followed by multiplication) in the divided
power algebra of F (see examples below). It is now straightforward but tedious to get f
following the strategy explained near the beginning of the previous paragraph. Let us first
work out three simple examples that will simultaneously illustrate all the main features of
the cases that we will have to consider in the general proof.

     EXAMPLE 1. ν = a, a partition with a single row. So λ = a1 and Kν⊗1 = Da ⊗ F .
We have to find the smallest multiple of identity in Hom(Ka1 , Ka1 ) that factors through
Da ⊗ F . Note that here d′a1 : Da1 → Ka1 with a single relation in Da1 = Da ⊗ F defining
Ka1 (see below). To find a generator f of Hom(Ka1 , Da ⊗ F ), let us look at the general
map g in Hom(Da ⊗ F, Da ⊗ F ) ≃ a1-weight submodule of Da ⊗ F . The following two
                                                                                (a)
standard tableaux of shape a ⊗ 1 form a basis for this weight submodule: e1 ⊗ e2 (i.e.,
                                   (a−1)
the canonical tableau Ca⊗1 ) and e1      e2 ⊗ e1 . These correspond respectively to the maps
g0 = identity and g1 = the polarization defined by the composite map

                                     ∆             13    m
                           Da ⊗ F −→ Da−1 ⊗ F ⊗ F −→  Da ⊗ F,

where ∆ = appropriate component of comultiplication on the first tensor factor and m13
= multiplication of the first and third tensor factors tensored with identity on the second
tensor factor. Now the map g = c0 g0 + c1 g1 : Da ⊗ F → Da ⊗ F descends to a map
from Ka1 exactly when it sends the kernel of d′a1 : Da ⊗ F → Ka1 to zero. This kernel
is the image of the comultiplication map ∆ : Da+1 → Da ⊗ F and so is generated by

                                               21
                                                (a+1)     (a)
∆(the canonical tableau in Da+1 ) = ∆(e1         ) = e1 ⊗ e1 . Evaluating g on this, we get
   (a)                      (a)
g(e1 ⊗ e1 ) = (c0 + ac1 )(e1 ⊗ e1 ). Note the coefficient a. It arises while calculating m13
                    (a−1)
when we multiply e1       and e1 in the divided power algebra of F . We now conclude that
f is obtained by taking c0 = a and c1 = −1. It remains to calculate d′a1 ◦ f and see which
multiple of the identity we get in Hom(Ka1 , Ka1 ). This is easiest to do by tracing what
happens to the canonical tableau. Applying d′a1 to the images of the canonical tableau Ca1
                           (a)           (a−1)
under g0 and g1 (i.e., to e1 ⊗ e2 and e1       e2 ⊗ e1 ), the desired integer is easily checked
                                                   (a−1)                      (a)
to be a + 1. The only thing to note is that d′a1 (e1      e2 ⊗ e1 ) = −d′a1 (e1 ⊗ e2 ) by direct
calculation.

     EXAMPLE 2. ν = a2 , a partition with two rows of equal length a. So λ = a2 1 and
Kν⊗1 = Ka2 ⊗ F . We have to find the smallest multiple of identity in Hom(Ka2 1 , Ka2 1 )
that factors through Ka2 ⊗ F . To find a generator f of Hom(Ka2 1 , Ka2 ⊗ F ), let us look at
the general map g in Hom(Da2 1 , Ka2 ⊗ F ) ≃ a2 1-weight submodule of Ka2 ⊗ F . A basis
for this weight submodule is given by images under d′a2 ⊗1 of the three standard tableaux
of shape a2 ⊗ 1 and weight a2 1. Let us explicitly write this basis and the corresponding
maps.
               (a)  (a)
     d′a2 ⊗1 (e1 ⊗ e2 ⊗ e3 ) corresponds to g0 = d′a2 ⊗1 .
             (a−1)         (a−1)
    d′a2 ⊗1 (e1      e2 ⊗ e2       e3 ⊗ e1 ) corresponds to g1 = the composite map

                         ∆                                                    d′a2 ⊗1
      Da ⊗ Da ⊗ F −→ Da−1 ⊗ F ⊗ Da−1 ⊗ F ⊗ F −→ Da ⊗ Da ⊗ F −→ Ka2 ⊗1 ,

where ∆ is the appropriate comultiplication on the first and second factors and the second
map is m14 ⊗ m35 ⊗ id, i.e., multiplication on the indicated factors tensored with identity
on the second factor.
              (a)  (a−1)
    d′a2 ⊗1 (e1 ⊗ e2     e3 ⊗ e2 ) corresponds to g2 = the composite map

                               ∆                                         d′a2 ⊗1
          Da ⊗ Da ⊗ F −→ Da ⊗ Da−1 ⊗ F ⊗ F −→ Da ⊗ Da ⊗ F −→ Ka2 ⊗1 ,

where ∆ is the appropriate comultiplication on the second factor and the second map is
id ⊗ m24 ⊗ id, i.e., multiplication on the indicated factors tensored with identity on the
first and third factors.

    Now the map g = c0 g0 + c1 g1 + c2 g2 : Da2 1 → Ka2 ⊗ F descends to a map from Ka2 1
exactly when it sends the kernel of d′a2 1 : Da2 1 → Ka2 1 to zero. This kernel is generated
by a relations derived from the first two rows and a single relation derived from the last
two rows of the partition a2 1. (See Note 2 at the end of this example.) The former are
images of the polarizations involving first two rows

                                   Da+t ⊗ Da−t ⊗ F −→ Da ⊗ Da ⊗ F
                                                                              (a+t)     (a−t)
for 1 ≤ t ≤ a, and so are generated by images of the canonical tableau e1       ⊗ e2    ⊗ e3 ,
          (a)   (t) (a−t)
i.e., by e1 ⊗ e1 e2       ⊗ e3 with 1 ≤ t ≤ a. The latter relation is similarly obtained by a

                                                  22
                                                                  (a)    (a)
polarization involving the last two rows and is generated by e1 ⊗ e2 ⊗ e2 . Let us first
use the last relation. By a calculation very similar to the one in Example 1 and noting by
                                                   (a)    (a)
direct calculation that the map g1 already kills e1 ⊗ e2 ⊗ e2 , we have
                                                               
                     (a)  (a)                          (a)  (a)
                  g e1 ⊗ e2 ⊗ e2 = (c0 + ac2 )d′a2 ⊗1 e1 ⊗ e2 ⊗ e2 .

Now from the remaining a relations, look at the one with t = 1. Note that g0 already kills
 (a)     (a−1)
e1 ⊗ e1 e2     ⊗ e3 . So
                                                                                        
   (a)     (a−1)                    (a−1)           (a−2)              (a)    (a−1)
g e1 ⊗ e1 e2     ⊗ e3 = c1 d′a2 ⊗1 e1     e2 ⊗ e1 e2      e3 ⊗ e1 + a e1 ⊗ e2       e3 ⊗ e1 +
                                                                                    
                             ′      (a)     (a−1)             (a)      (a−2)
                        c2 da2 ⊗1 e1 ⊗ e2         e3 ⊗ e1 + e1 ⊗ e1 e2       e3 ⊗ e2 .

Looking at the four terms inside two sets of parantheses on the right hand side, the last
one is killed by d′a2 ⊗1 and the tableaux in middle two terms are standard (in fact the
same). For the first term, either by inspection using the definition of d′a2 ⊗1 or by using
the “straightening” procedure in [ABW], we have
                                                                               
                (a−1)          (a−2)                            (a)  (a−1)
       d′a2 ⊗1 e1     e2 ⊗ e1 e2     e3 ⊗ e1 = −(a − 1)d′a2 ⊗1 e1 ⊗ e2     e3 ⊗ e1 .

So we get
                                                                       
                (a)     (a−1)                           (a)  (a−1)
             g e1 ⊗ e1 e2     ⊗ e3 = (c2 + c1 )d′a2 ⊗1 e1 ⊗ e2     e3 ⊗ e1 .

Equating the two relations treated above to zero, we get a one parameter family of solutions
for the integer coefficients ci , namely c2 = −1, c1 = 1 and c0 = a. Since we are assured of
the existence of f , and since GL(F )-equivariance of an integral multiple of any map clearly
guarantees GL(F )-equivariance of the original map, the solution we found must give us
the desired map f generating Hom(Ka2 1 , Ka2 ⊗ F ). (So the remaining relations must be
automatically satisfied and were not necessary for our purpose. This feature will repeat in
the general calculation and can be understood more conceptually as explained in Note 2
below.)

     It remains to follow the action of f with the natural surjection Ka2 ⊗ F → Ka2 1 and
see which multiple of the identity we get in Hom(Ka2 1 , Ka2 1 ). Applying d′a2 1 to the images
of the canonical tableau Ca2 1 under g0 , g1 and g2 the desired integer is easily checked by
direct calculation to be c0 + c1 − c2 = a + 2.

    Notes. (1) If a = 1, the above calculation has to be modified since the terms where
a − 2 occurs no longer make sense and have to be replaced by 0. But it is easily checked
that the final answer a + 2 = 3 is still valid.

     (2) In general, to define any skew Weyl module by generators and relations, we need
for every pair of consecutive rows of the corresponding skew partition as many relations

                                              23
as the length of the overlap between the two rows. Calling the lengths of two such rows p
and q and the length of their overlap r, the relations corresponding to these rows are the
images of the following r polarizations involving these two rows

                           . . . Dp+t ⊗ Dq−t . . . −→ . . . Dp ⊗ Dq . . . ,

where q−r+1 ≤ t ≤ q, “. . .” indicates tensoring by the divided powers corresponding to the
remaining rows and the above maps are identity on “. . .”. (Tracing the canonical tableau,
it is easily seen from the definition of skew Weyl modules that these are indeed relations,
i.e., that d′ annihilates the images of these maps. [ABW, Theorem II.3.16] shows, among
other things, that these relations suffice to define the skew Weyl module in question.) In
fact it turns out that the single relation with t = q − r + 1 generates all the others up
to a multiple (an argument for this is sketched below) and so any equivariant map from
the appropriate tensor product of divided powers of F satisfying this one relation must
automatically satisfy all the others.

     Sketch for the claim in the previous sentence: letting the two rows be those numbered
i − 1 and i, consider the map in GL(F ) that takes ei to ei−1 + ei and acts as the identity
on other ej . Apply the map induced on the divided power algebra of F to
                                 (p)     (q−r+1)
                            . . . ei−1 ⊗ ei−1      (ei−1 + ei )(r−1) . . . ,

i.e., to the image of the canonical tableau under the polarization we picked out. Expand the
last divided power and notice that all the summands have different weights and individually
give all r relations up to a multiple. (Also see lines 12-13 on [ABW, p.209] but note the
typo on line 13: λ2 − µ2 + 1 should instead be µ1 − µ2 + 1.)

     EXAMPLE 3. ν = ab, a partition with two rows of unequal lengths a > b. So λ = ab1
and Kν⊗1 = Kab ⊗F . We have to find the smallest multiple of identity in Hom(Kab1 , Kab1 )
that factors through Kab ⊗ F . The outline of this calculation is very similar to that
in Example 2 with the following crucial change. The relevant weight submodule now
has dimension four instead of three, resulting in significantly different constraints on the
constants. To find a generator f of Hom(Kab1 , Kab ⊗ F ), let us look at the general map
g in Hom(Dab1 , Kab ⊗ F ) ≃ ab1-weight submodule of Kab ⊗ F . A basis for this weight
submodule is given by images under d′ab⊗1 of the four standard tableaux of shape ab⊗1 and
weight ab1. Let us explicitly write this basis and the corresponding maps. (The labeling
of the maps in all three examples is chosen so as to be consistent with the general case
treated below.)
              (a)  (b)
     d′ab⊗1 (e1 ⊗ e2 ⊗ e3 ) corresponds to g00 = d′ab⊗1 .
            (a)   (b−1)
    d′ab⊗1 (e1 ⊗ e2       e3 ⊗ e2 ) corresponds to g01 = the composite map

                           ∆                                                   d′ab⊗1
          Da ⊗ Db ⊗ F −→ Da ⊗ Db−1 ⊗ F ⊗ F −→ Da ⊗ Db ⊗ F −→ Kab⊗1 ,

where ∆ is the appropriate comultiplication on the second factor and the second map is
id ⊗ m24 ⊗ id, i.e., multiplication on the indicated factors tensored with identity on the
first and third factors.

                                                 24
             (a−1)        (b)
     d′ab⊗1 (e1      e3 ⊗ e2 ⊗ e1 ) corresponds to g10 = the composite map

                                ∆                                          d′ab⊗1
           Da ⊗ Db ⊗ F −→ Da−1 ⊗ F ⊗ Db ⊗ F −→ Da ⊗ Db ⊗ F −→ Kab⊗1 ,

where ∆ is the appropriate comultiplication on the first factor and the second map is
m14 ⊗ s23 , i.e., multiplication on the indicated factors tensored with switching the middle
two factors. (This is the new case compared to Example 2, made possible by the fact that
the first row is longer than the second.)
              (a−1)       (b−1)
     d′ab⊗1 (e1     e2 ⊗ e2     e3 ⊗ e1 ) corresponds to g11 = the composite map

                         ∆                                                     d′ab⊗1
       Da ⊗ Db ⊗ F −→ Da−1 ⊗ F ⊗ Db−1 ⊗ F ⊗ F −→ Da ⊗ Db ⊗ F −→ Kab⊗1 ,

where ∆ is the appropriate comultiplication on the first and second factors and the second
map is m14 ⊗ m35 ⊗ id, i.e., multiplication on the indicated factors tensored with identity
on the second factor.

     Now the map g = c00 g00 +c01 g01 +c10 g10 +c11 g11 : Dab1 → Kab ⊗F descends to a map
from Kab1 exactly when it sends the kernel of d′ab1 : Dab1 → Kab1 to zero. This kernel is
generated by b relations derived from the first two rows and a single relation derived from
                                                                        (a)     (t) (b−t)
the last two rows of the partition ab1. The former are generated by e1 ⊗ e1 e2            ⊗ e3
                                    (a)     (b)
with 1 ≤ t ≤ b and the latter by e1 ⊗ e2 ⊗ e2 . Let us first use the last relation. By a
calculation similar to the one in Examples 1 and 2, we have
                                                                                       
    (a)   (b)                    ′      (a)    (b)                ′      (a−1)        (b)
g e1 ⊗e2 ⊗e2 = (c00 +bc01 )dab⊗1 e1 ⊗e2 ⊗e2 +(c10 +bc11 )dab⊗1 e1              e2 ⊗e2 ⊗e1 .

Now from the remaining a relations, look at the one with t = 1. Note that g00 already
        (a)    (b−1)
kills e1 ⊗ e1 e2     ⊗ e3 . So
                                                                                         
      (a)    (b−1)                 ′      (a)     (b−1)             (a)      (b−2)
 g e1 ⊗ e1 e2      ⊗ e3 = c01 dab⊗1 e1 ⊗ e2             e3 ⊗ e1 + e1 ⊗ e1 e2       e3 ⊗ e2 +
                                                                    
                                          (a−1)           (b−1)
                              c10 d′ab⊗1 e1     e3 ⊗ e1 e2      ⊗ e1 +
                                                                                                 
                                          (a−1)           (b−2)              (a)     (b−1)
                              c11 d′ab⊗1 e1     e2 ⊗ e1 e2      e3 ⊗ e1 + a e1 ⊗ e2        e3 ⊗ e1 .

Looking at the five terms inside three sets of parantheses on the right hand side, the second
one is killed by d′ab⊗1 , the tableaux in the first and the last terms are standard (in fact the
same), and those in the third and fourth need to be “straightened.” Either by inspection
using the definition of d′ab⊗1 or by using the straightening procedure in [ABW], for the
third term we get
                                                                               
                      (a−1)          (b−1)                     (a)   (b−1)
             d′ab⊗1 e1      e3 ⊗ e1 e2     ⊗ e1 = −d′ab⊗1 e1 ⊗ e2          e3 ⊗ e1 .

As for the fourth term, exactly as in Example 2, we have
                                                                              
                (a−1)          (b−2)                           (a)  (b−1)
        d′ab⊗1 e1     e2 ⊗ e1 e2     e3 ⊗ e1 = −(b − 1)d′ab⊗1 e1 ⊗ e2     e3 ⊗ e1 .

                                                25
So we get
                                                                                
      (a)     (b−1)                                              (a)  (b−1)
   g e1 ⊗ e1 e2     ⊗ e3 = (c01 − c10 + c11 (a − b + 1)) d′ab⊗1 e1 ⊗ e2     e3 ⊗ e1 .

Equating the two relations treated above to zero, we get a one parameter family of solutions
for the integer coefficients, namely c11 = 1, c01 = −(a + 1), c10 = −b and c00 = (a + 1)b.
As explained in Example 2, this must give us the desired map f .

     It remains to follow the action of f with the natural surjection Kab ⊗ F → Kab1 and
see which multiple of the identity we get in Hom(Kab1 , Kab1 ). Applying d′ab1 to the images
of the canonical tableau Cab1 under g00 , g01 , g10 and g11 the desired integer is easily checked
by direct calculation to be c00 − c01 − c10 + c11 = (a + 1)b + (a + 1) + b + 1 = (a + 2)(b + 1).
(Note that just as in Example 2, if b = 1 then terms involving b − 2 have to be dropped.
But again the final result is easily checked to remain valid.)

     Returning to the general case, the diagram of ν ⊗ 1 consists of k rectangular blocks of
                                      p
rows (with the j-th block being aj j ) plus a lone box in the last row. Let us first describe
the set of standard tableaux of shape ν ⊗ 1 and weight λ. Such tableaux are in bijective
correspondence with k-tuples of integers i = i1 . . . ik with 0 ≤ ij ≤ pj . For example, for
ν = a51 a22 a33 , the index i = 302 corresponds to the tableau with shape ν ⊗ 1, whose rows
have rightmost entries e1 e2 e4 e5 e9 e6 e7 e8 e10 e11 e3 from top to bottom and whose
all other entries match with the corresponding entries in the canonical tableau Cν⊗1 . The
example will be clarified by the general description given next.

     Let us describe Ti in general. It has the same entries as the canonical tableau Cν⊗1
except possibly in the rightmost border strip, in which the entries of Cν⊗1 undergo a cyclic
permutation as follows. When ij = 0, the j-th block is unaffected, e.g., the second block
consisting of rows 6 and 7 in the above example. When the first nonzero ij from the left
appears, say ij1 , the ij1 -th entry in the rightmost column of the j1 -th block is removed
and the entries below it in the same block are moved upward by one slot each. Now we
find the next nonzero entry in i, say ij2 , remove the ij2 -th entry in the rightmost column
of the j2 -th block and place it in the empty space created at the bottom of the j1 th block.
Again the entries below the removed one in the j2 -th block move one slot upward and so
on, until the last nonzero ijt is used up. Now we remove the number in the last row of
ν ⊗ 1 and place it in the empty slot at the bottom of the jt -th block. Finally we place
the very first entry we removed, i.e., the ij1 -th entry in the rightmost column of the j1 -th
block, in the lone box in the last row of ν ⊗ 1. Note for instance that T0 = the canonical
tableau Cν⊗1 . (It is a combinatorial exercise to prove that Ti are indeed all the standard
tableaux of shape ν ⊗ 1 and weight λ. But it is not really necessary to check this as long
as the listed tableaux suffice to produce a nontrivial map via our procedure.)

     The map gi : Dλ → Kν⊗1 corresponding to Ti is obtained in a completely analogous
manner to the maps seen in the examples above. More precisely, in the first step we split
off via comultiplication a degree one piece from every row in which Ti differs from the
canonical tableau Cν⊗1 . Then we multiply what is left for each such row (numbered, say,

                                               26
r) by the degree one piece split off from s-th row where es is the the last entry of r-th row
in Ti . Finally we apply d′ν⊗1 . Note for instance that g0 is just d′ν⊗1 .

     Let us now turn to the relations in Dλ defining Kλ . These will help us solve for the
unknowns ci1 ...ik . In what follows, sometimes we will have to temporarily fix values of
some of the components in i1 . . . ik . For ease of notation, after explaining such a choice, we
will often denote such fixed components simply by writing “. . .”. The intended meaning
will be clear from the context. The relations defining Kλ can be divided into three types
as follows.

     Type 1. The relation involving the last two rows of λ, i.e. the last row of the partition ν
and the last row of λ consisting of exactly one box. Suppose these rows are numbered x and
                                                                                       (a )
x+1 (so x = p1 +. . .+pk ). Then the relation in question is generated by Rx = . . .⊗ex k ⊗ex ,
where . . . indicates x − 1 factors matching the first x − 1 factors of the canonical tableau
Cλ . Applying g to this relation, it is clear by explicit calculation that unless ik = 0 or pk ,
gi (Rx ) = 0, essentially because otherwise all ak + 1 occurences of ex in Rx are sent inside
the last block (which has only ak columns) by gi . (In Example 2 this was manifested in
the fact that the g1 there already killed the relation in question.) So let ik = 0 or pk
henceforth in this paragraph. For the moment arbitrarily fix values of all other i’s so that
we are considering only two of the maps gi . Applying the corresponding two terms in g to
Rx , we get exactly as in Examples 1 and 2 the expression (c...0 + ak c...pk )d′ν⊗1 (S), where
S is the standard tableau of shape ν ⊗ 1 obtained as follows. Take Ti corresponding to
either of the two gi being evaluated and obtain S from Ti by replacing the single occurence
of the entry ex+1 with ex . Now allowing all possible choices of i1 . . . ik−1 , it is easy to
see that the standard tableaux S that arise in the way just explained are all distinct.
(Compare Example 3.) Altogether, the relation under consideration gives us the following
constraints.
                                 ci1 ...ik−1 0 + ak ci1 ...ik−1 pk = 0.

     Type 2. Relations involving consecutive rows in the same block. Let us see that this
case leads to a calculation virtually identical to the one in Example 2 where a relation
involving the first two rows was treated. Suppose we are dealing with relations involving
rows numbered x and x + 1 and that these are respectively the y-th and (y + 1)-th rows of
the j-th block (and so each is of length aj ). Then one of the relevant relations is generated
                  (a )      (aj −1)
by Rx = . . . ⊗ ex j ⊗ ex ex+1      ⊗ . . . , where . . . indicates expressions identical to the
corresponding factors of the canonical tableau Cλ . Applying g to this relation results in
the following. For ij other than y and y + 1, gi (Rx ) = 0 by explicit calculation, essentially
because all aj + 1 occurences of ex in Rx are kept within the j-th block of λ (which has
only aj columns) by such gi . (In Example 2 this was manifested in the fact that the g0
there already killed the relation in question.) So let ij = y or y + 1 henceforth in this
paragraph. For the moment arbitrarily fix values of all other i’s so that we are considering
only two of the gi . Then exactly as in Example 2, we get an expression with four terms
inside two sets of parantheses with obvious changes in subscripts and placement of e’s. By
a very similar calculation, this expression simplifies to (c...y... + c...(y+1)... )d′ν⊗1 (T ), where
y and y + 1 appear in the j-th slot and T is the following standard tableau of shape ν ⊗ 1.

                                                 27
From the two gi being evaluated, consider the one with ij = y and take the corresponding
tableau Ti . Obtain T from this Ti by replacing the single ex+1 in the x-th row with ex . It
is now easy to see that the tableaux T that arise in this fashion are all distinct for distinct
choices of i. (Of course only k − 1 components of i are being chosen here, in view of our
earlier reasoning for ij .) So just as we got c1 + c2 = 0 in Example 2, we get the constraint
c...y... + c...(y+1)... = 0, where y and y + 1 appear in the j-th slot. It should be clear now
that in general such relations give us the following equations.
                ci1 ...ij ...ik + ci1 ...(ij +1)...ik = 0,    1 ≤ j ≤ k,   1 ≤ ij ≤ pj − 1.
In view of these relations it is enough to determine ci with ij = 0 or pj for each j.

     Type 3. Relations involving the last row of one block and the first in the next. This case
leads to calculation very similar to the corresponding calculation in Example 3. Suppose
we are dealing with relations involving rows numbered x and x + 1 and that these are
respectively the last row of the j-th block and the first row of the (j + 1)-th block. So row
x is of length aj and row x + 1 of smaller length aj+1 . Then one of the relevant relations is
                             (a )     (aj+1 −1)
generated by Rx = . . .⊗ex j ⊗ex ex+1           ⊗. . . , where . . . indicates expressions identical to
the corresponding factors of the canonical tableau Cλ . Consider the calculation of g(Rx ).
Note that all aj + 1 occurences of ex in Rx are contained within the j-th and (j + 1)-th
blocks, where the number of columns is never more than aj . So for any gi that leaves this
property unchanged, clearly gi (Rx ) = 0. Using this it is easy to see that for ij other than
0 and pj , gi (Rx ) = 0 and furthermore, if ij = 0 then again gi (Rx ) = 0 unless ij+1 = 1.
Thus the terms involving only those gi where either (ij = 0 and ij+1 = 1) or (ij = pj and
ij+1 = 0, . . . , pj+1 ) can possibly survive. Until further notice arbitrarily fix values of all
i’s other than ij and ij+1 . So in view of the preceding discussion, we are considering only
pj+1 + 2 terms. Let us consider these one by one after setting up some more notation. Tix
will denote the (nonstandard) tableau obtained from Ti by replacing the first appearance
of ex+1 in row x + 1 with ex . (See Remark 1 at the end of this proof if there is no such
appearance.) Define a standard tableau U as follows. Consider the Ti with ij = 0 and
ij+1 = 1. Obtain U by replacing the only occurence of ex+1 outside row x + 1 with ex .

     (i) For the i with ij = 0 and ij+1 = 1, gi (Rx ) = d′ν⊗1 (Tix + U ) = d′ν⊗1 (U ) by noting
that d′ν⊗1 (Tix ) = 0. (Compare the very similar evaluation of g01 in Example 3 on the
relevant relation.)

     (ii) For the i with ij = pj and ij+1 = 0, gi (Rx ) = d′ν⊗1 (Tix ) = (−1)pj+1 d′ν⊗1 (U ). The
second of these equalities is obtained by easy application of the “straightening” procedure
in [ABW] or checked even more easily by explicit calculation using the definition of d′ν⊗1 .
(Compare the very similar evaluation of g10 in Example 3 on the relevant relation.)

     (iii) For the i with ij = pj and ij+1 = 1,
                      gi (Rx ) = d′ν⊗1 (Tix + aj U ) = (aj − aj+1 + 1)d′ν⊗1 (U )
since by straightening or explicit calculation, d′ν⊗1 (Tix ) = −(aj+1 − 1)d′ν⊗1 (U ). (Compare
the very similar evaluation of g11 in Example 3 on the relevant relation.)

                                                         28
    (iv) For the i with ij = pj and ij+1 = r, 2 ≤ r ≤ pj+1 , gi (Rx ) = d′ν⊗1 (Tix ) =
(−1)r−1 d′ν⊗1 (U ) by straightening or explicit calculation. (This case does not have a coun-
terpart in Example 3, since there pj+1 was 1. But the necessary simplification follows the
same pattern as in item (ii) above.)

    Collecting the information in items (i) through (iv) and using the constraints obtained
from relations of type 2 to convert all ij+1 into 0 or pj+1 , we get
                                                                                              
                    pj+1 −1
    g(Rx ) = (−1)              c...0pj+1 ... − c...pj 0... + (aj − aj+1 + pj+1 )c...pj pj+1 ... d′ν⊗1 (U ),

where only the j-th and (j + 1)-th components of i are written. Now allowing i to vary, it
is easy to see that the standard tableaux U that arise as explained above are all distinct.
So we get the following constraints, where again only the j-th and (j + 1)-th components
in i are written, all others being assumed to be the same in each term of the equation. For
1 ≤ j ≤ k − 1,
                         c0pj+1 − cpj 0 + (aj − aj+1 + pj+1 )cpj pj+1 = 0.
Let us now solve all the constraints on ci obtained above. Order all ci lexicographically with
respect to the indices i. (In each constraint above the variables are written in lexicographic
order.) It is easily seen that the constraints give us a homogeneous linear system of integer
equations whose coefficient matrix is triangular with all 1’s on the diagonal and that cp1 ...pk
is the only free variable. So we have a one-parameter family of solutions for ci and each
solution is uniquely specified by assigning an arbitrary integer value to cp1 ...pk . We will
verify that
                           Y                                                  Y
                 bi = ǫi           (aj + pj+1 + pj+2 + . . . + pk ) = ǫi             (hj − pj )
                           ij =0                                             ij =0


is a generator of this family, where ǫi is the sign of the cyclic permutation in the right-
most border strip of Ti with reference to the canonical tableau Cν⊗1 . Since ǫi1 ...ik−1 0 =
−ǫi1 ...ik−1 pk and bi1 ...ik−1 0 = ak bi1 ...ik−1 pk the constraints of type 1 are satisfied. The sign ǫi
ensures that the constraints of type 2 are satisfied. As for the constraints of type 3, noting
that the sign of the bi corresponding to the middle term of this constraint is opposite to
that for the first and the third term, the verification boils down to the simple fact that

    (aj + pj+1 + pj+2 + . . . + pk ) − (aj − aj+1 + pj+1 ) − (aj+1 + pj+2 + . . . + pk ) = 0.

     Since |bp1 ...pk | = 1, we have the desired map f . After having computed f , we need
to follow its action with the natural surjection Kν⊗1 → Kλ . It is easy to see that un-
der this surjection d′ν⊗1 (Ti ) is sent toP
                                          ǫi d′λ (Cλ ). Therefore the map Hom(Kλ , Kν⊗1 ) →
Hom(Kλ , Kλ ) is given by the integer i |bi |. Call this expression Eν . We will show by
induction on the number of blocks k in the partition ν that Eν = h1 . . . hk . The base case
k = 1 is an easy check (or even subsumed in the induction by defining Eφ = 1 and seeing
that this makes obvious sense in the context of the lemma). Let ν ′ = ap22 . . . apkk be the
partition obtained from ν by deleting the first block ap11 . The terms in Eν with i1 = 0

                                                      29
give (h1 − p1 )Eν ′ . The remaining terms in Eν , by fixing i1 = 1, . . . , p1 at a time, can be
partitioned into p1 groups each of which is Eν ′ . This completes the proof of Lemma C.

     Remarks. (1) If ak = 1, one has to modify a few of the details in the calculations
required to find the constraints, but the same constraints stay valid. Specifically, while
dealing with relations of type 2 for rows in the last block, two of the four terms within
two sets of parantheses have to replaced by 0 (see Note 1 at the end of Example 2). While
dealing with relations of type 3, the definition of tableaux Tix no longer makes sense when
j + 1 = k and ik = 1 because then the single entry in row x + 1 of Ti is not ex+1 . But this
simply means that the Tix in items (i) and (iii) has to be replaced by 0, leaving the end
result in these items unchanged for the case under consideration (see the Note at the end
of Example 3).

     (2) The map f may be of independent interest because in a sense it gives us an explicit
formula for the intertwining homomorphism between neighboring Weyl modules for GLn ,
see [Andersen1, Section 6].

    In proofs of the remaining lemmas, we will need several items from the proof of Lemma
C. These include the ordered basis e1 , e2 , . . . for F , the indices i, the tableaux Ti and the
associated maps gi , the numbers bi and the map f .

     Proof of Lemma B. Let us first identify the module N in the statement of the lemma
as a skew Weyl module. Using [AB1, 6.6] and contravariant duality, we have the short
                                        π
exact sequence 0 → Kµ → Kν ⊗ F → Kξ → 0 , where Kξ is the skew Weyl module
corresponding to the skew partition ξ = a1p1 +1 ap22 . . . apkk /a1 − 1. (In words, the diagram
of ξ is obtained by placing a single box immediately above the last box in the first row of
ν.) So N = Kξ and our task is to find the smallest multiple of identity in Hom(Kλ , Kλ )
that factors through Kξ . For this we will find a generator f ′ of Hom(Kλ , Kξ ) and follow
its action with the natural surjection Kξ → Kλ (obtained from the natural surjection
Kν ⊗ F → Kλ used in Lemma C, which kills the submodule Kµ . See the exact sequence
above.) The generator f ′ can be found exactly as f was found in Lemma C. But instead
we will use the work already done to find f and finish the proof as follows. Consider the
composite map π ◦ f : Kλ → Kξ where π is the surjection in the exact sequence above.
Using the standard basis for Kξ , we will write an explicit expression for π ◦ f (d′λ (Cλ )).
It will be obvious that this expression is divisible by h1 and by no larger integer. So
f ′ = π ◦ f /h1 is a generator for Hom(Kλ , Kξ ) and composing it with the natural surjection
Kξ → Kλ gives the desired result in view of Lemma C.

     Let us lay some groundwork for the calculation of π ◦ f (d′λ (Cλ )). First note that
removing the lone box in the last row of ν ⊗ 1 and placing it directly above the last box in
the first row of ν gives us the diagram of the skew partition ξ. We will need this relocation
on two occasions. In the first instance it is involved in the surjection π : Kν ⊗ F → Kξ .
Explicitly π maps d′ν⊗1 (Cν⊗1 ) to d′ν ′ (Cν ′ ) ⊗ (em ∧ e1 ∧ . . . ∧ ep1 ), where ν ′ is the partition
obtained by stripping off the last column of ν and em is the entry in the last row of Cν⊗1 .
(All this is only a notational issue arising from the simple fact that the diagram of ν and

                                                  30
a single box can be “joined cornerwise” in either order to give us two skew partitions
whose associated skew Weyl modules are both isomorphic to Kν ⊗ F .) Secondly the same
relocation is involved in describing the standard tableaux of shape ξ and weight λ. These
are Ti′2 i3 ...ik , defined as follows. i2 i3 . . . ik is an arbitrary (k − 1)-tuple of integers satisfying
0 ≤ ij ≤ pj and Ti′2 i3 ...ik is identical to the tableau T1i2 i3 ...ik in the proof of Lemma C except
for the relocation of a single box (with its content intact) required to get the diagram of ξ
from that of ν ⊗ 1. (Again it is an optional combinatorial exercise to verify that these are
precisely the tableaux of the given description. Alternatively this fact is immediate from
the corresponding combinatorial statement in the proof of Lemma C.) Using all the setup
in this paragraph, it is an easy check that π maps d′ν⊗1 (Ti1 i2 ...ik ) to (−1)i1 −1 d′ξ (Ti′2 ...ik ) if
1 ≤ i1 ≤ p1 and to (−1)p1 d′ξ (Ti′2 ...ik ) if i1 = 0. Putting everything together
                                    X                             p1
                                                                   X                             
          π◦   f (d′λ (Cλ ))   =                   p1
                                              (−1) b0i2 ...ik +            (−1)i1 −1 bi1 i2 ...ik d′ξ (Ti′2 ...ik ).
                                   i2 ...ik                        i1 =1

Referring to the values of bi , we have b0i2 ...ik = −(h1 − p1 )bp1 i2 ...ik and (−1)i1 −1 bi1 i2 ...ik =
(−1)p1 −1 bp1 i2 ...ik . So the coefficient of d′ξ (Ti′2 i3 ...ik ) in the above expression works out to
be (−1)p1 −1 h1 bp1 i2 ...ik . Since |bp1 p2 ...pk | = 1, the proof of Lemma B is complete.

     Proof of Lemma A. Our task is to find the smallest multiple of the identity in
Hom(Kν , Kν ) that factors through Kλ/1 . For this we will compose the natural injec-
tion ι : Kν ֒→ Kλ/1 with a generator of Hom(Kλ/1 , Kν ). This generator can be found
exactly as in Lemma C. But instead we will again get it using the work already done for
Lemma C by employing an idea from [AB1] as follows.

     In this paragraph only, consider Kλ , Kλ/1 and Kν as functors. Applied to the free
abelian group F these give us the representations Kλ (F ), Kλ/1 (F ) and Kν (F ) of GL(F ).
Consider an extra copy of Z (which we will regard as the trivial representation of GL(F ))
with basis e0 and use the ordered basis e0 , e1 , . . . for Z ⊕ F . Now the module Kλ (Z ⊕ F )
considered as a representation of GL(F ) splits into a direct sum by the content of e0 . Using
the standard basis theorem, the summand with e0 -content one is spanned by standard
tableaux with a single e0 entry in the top left corner of λ and is clearly isomorphic to
Kλ/1 (F ). Consider the following composite map of representations of GL(F ) beginning
with the containment just explained.
                                                   f                                     pr
               Kλ/1 (F ) → Kλ (Z ⊕ F ) → Kν (Z ⊕ F ) ⊗ (Z ⊕ F ) → Kν (Z ⊕ F ),
where the second map is the map f in the proof of Lemma C (now between representa-
tions of GL(Z ⊕ F )) and the third map is the projection pr derived from the direct sum
decomposition Kν (Z ⊕ F ) ⊗ (Z ⊕ F ) ≃ Kν (Z ⊕ F ) ⊕ (Kν (Z ⊕ F ) ⊗ F ). Let us trace the
action of this composite map on the canonical tableau Cλ/1 of shape λ/1. The first map
              (λ −1)    (λ )                     (λ −1)    (λ )
takes d′λ/1 (e1 1    ⊗ e2 2 ⊗ . . .) to d′λ (e0 e1 1    ⊗ e2 2 ⊗ . . .). Now using the work done
for Lemma C,
                                             X                                    
                       (λ −1)     (λ )                            (λ −1)    (λ )
             f d′λ e0 e1 1    ⊗ e2 2 ⊗ . . .      =     bi gi e0 e1 1    ⊗ e2 2 ⊗ . . . .
                                                               i


                                                          31
Applying the projection pr to this element, we see that the terms involving gi with i1 6= 1
are killed. This is because applying such gi would result in a tableau having an entry other
than e0 in the lone box in the last row of ν ⊗ 1, so this tableau would be killed by pr. As
                    (λ −1)     (λ )
for g1i2 ...ik (e0 e1 1     ⊗ e2 2 ⊗ . . .), what survives upon projection is exactly d′ν (Ti′′2 ...ik ),
where the standard tableau Ti′′2 ...ik of shape ν is the same as the tableau T1i2 ...ik in the
proof of Lemma C (or Ti′2 ...ik in the proof of Lemma B) with the extra box containing the
entry e1 removed. (Again it is an optional combinatorial check – or immediate from the
corresponding fact in proofs of Lemma C or Lemma B – that Ti′′2 ...ik exhaust the standard
tableaux of shape ν and weight e1λ1 −1 eλ2 2 eλ3 3 . . . .) It is also clear from the calculation (or
even a priori) that the image of the composite map above lies in the submodule Kν (F ) of
Kν (Z ⊕ F ). All in all, we have constructed a map f ′′ : Kλ/1 (F ) → Kν (F ) such that
                                                   
                               (λ −1)      (λ )
                                                             X
                   f ′′ d′λ/1 e1 1    ⊗ e2 2 ⊗ . . .    =           b1i2 ...ik d′ν (Ti′′2 ...ik ).
                                                           i=1i2 ...ik

Recall how in the proof of Lemma C a formula for f was written using maps gi . In ex-
      the same fashion from the preceding equation we can say that f ′′ descends from the
actly P
                              ′′                                     ′′
map     1i2 ...ik b1i2 ...ik gi2 ...ik : Dλ/1 (F ) → Kν (F ), where gi2 ...ik is the map “correspond-
ing” to the tableau Ti2 ...ik . (In other words gi2 ...ik can be built from the tableau Ti′′2 ...ik
                              ′′                         ′′

using polarizations in the divided power algebra of F exactly the way gi was built from
the tableau Ti in the proof of Lemma C, see the paragraph immediately after the one
describing Ti .) Further, since |b1p1 ...pk | = 1, f ′′ is indivisible and hence a generator of
Hom(Kλ/1 (F ), Kν (F )).

     Let us now compose the the map f ′′ in the previous paragraph with the natural
injection ι : Kν ֒→ Kλ/1 . ι descends from a map that “polarizes a degree one piece” from
each row into the next row. Recall that this means splitting off a degree one component
from one row via diagonalization and then multiplying this component into another row,
both operations being done in the divided power algebra of F . Let us make this explicit
                                    (ν )   (ν )                                       (λ −1)
using the canonical tableau Cν = e1 1 ⊗ e2 2 ⊗ . . . . We have ι(d′ν (Cν )) = d′λ/1 (e1 1    ⊗
   (λ −1)         (λ −1)
e1 e2 2         ⊗ e2 e3 3    ⊗ . . .). (Note that λ and ν are identical with the exception that
λ has an extra row consisting of a single box.) We will find the image of this element
                                                                (λ −1)       (λ −1)        (λ −1)
under f ′′ by computing the individual terms gi′′2 ...ik (e1 1         ⊗ e1 e2 2     ⊗ e2 e3 3     ⊗ . . .).
This computation involves two steps. (1)Polarize degree one pieces from several rows
into previous rows as dictated by the entries in the rightmost border strip of the tableau
Ti′′2 ...ik . (2)Apply d′ν to the result of the first step. Since the result of the first step is a linear
combination of tableaux that are in general not standard, in the second step one has to
straighten these tableaux using the procedure in [ABW]. To keep control of the calculation
it will be convenient for us to mix the order of operations involved in steps 1 and 2 as
follows. Proceeding from top row to the bottom row, we will follow each single polarization
immediately by straightening. Each such straightening will involve only a fragment of a
tableau up to the rows involved the preceding polarization. It will be clear that the end
result is unaffected by such interlacing of steps 1 and 2 used for one polarization at a time.

     Let us illustrate the above discussion by first treating an extreme case. Consider

                                                    32
  ′′   (λ −1)           (λ −1)         (λ −1)                        ′′
g1...1 (e1 1     ⊗ e1 e2 2       ⊗ e2 e3 3   ⊗ . . .). Note that g1...1    involves, for each pair of
consecutive nonzero rows of λ, polarization of a degree one component from the lower row
into the immediately preceding row. For now look at what happens after doing only the
polarization from the second row into the first row, which affects only the first two tensor
factors. This gives
                                                                                                  
   (λ1 −1)       (λ2 −1)                   (λ1 )    (λ2 −1)             (λ1 −1)          (λ2 −2)
 e1        ⊗ e1 e2       ⊗ . . . 7−→ λ1 e1 ⊗ e2             ⊗ . . . + e1        e2 ⊗ e1 e2       ⊗... .

Notice that the tableau fragment displayed in second term on the right hand side is non-
standard due to a violation in the very first column. It is clear by looking that this
non-standardness will persist after subsequent polarizations. So after the application of
d′ν , we will need to apply the straightening procedure to the first two rows. (And lower
rows too, but we will deal with that later. Here “straightening” means replacing a tableau
by a linear combination of tableaux as prescribed in [ABW] that will give the same result
upon applying the appropriate generalized symmetrizer map d′ .) Moreover, we may do
                                                                                 ′′
this straightening before applying the rest of the polarizations involved in g1...1     without
affecting the overall result. This is because subsequent polarizations will only involve rows
numbered two and below. Rows below the second are entirely unaffected by the results
of the proposed straightening. As for the second row, the next polarization will result
in a degree one piece being multiplied into it, but this multiplication and the proposed
straightening together give the same result for the second row regardless of the order in
which they are performed. This is simply from associativity of multiplication. To carry
                                                                     (λ )          (λ )
out the proposed straightening, consider the diagonalization ∆(e1 1 e2 ) = e1 1 ⊗ e2 +
 (λ −1)                                                                   (λ )   (λ −1)
e1 1 e2 ⊗e1 . Using this the nonstandard term straightens to −(λ2 −1)(e1 1 ⊗e2 2 ⊗. . .),
                                                                       (λ −2)
where the constant (λ2 − 1) is due to the multiplication of e2 and e2 2        in the divided
                                                              ′′
power algebra. Combining, the result so far in calculating g1...1 can be shown as follows.
                                                                                   
              (λ1 −1)        (λ2 −1)                              (λ )   (λ −1)
            e1          ⊗ e1 e2        ⊗ . . . 7−→ (λ1 − λ2 + 1) e1 1 ⊗ e2 2    ⊗... .

(Note that this is a just a schematic representation of what happens after applying steps
1 and 2 for a single polarization. In particular we cannot write d′ν on the right hand side
until all polarizations are applied.) Since the fragment obtained so far matches that for
                                                                                    ′′
the standard tableau Cν , clearly subsequent polarizations in the calculation of g1...1  will
not result in terms that are nonstandard in the first two rows. So evidently we may use
the same logic on successive pairs of rows of λ. Inductively we get the end result to be
d′ν (Cν ) times the product of λt−1 − λt + 1 over successive pairs of nonzero rows of λ.

    By an extension of the above argument, we will show that in general,
                                           
                 (λ −1)       (λ −1)
                                                                         Y
(∗) gi′′2 ...ik e1 1    ⊗ e1 e2 2    ⊗ . . . = (−1)p1 +...+pk ǫ1i2 ...ik   (λt−1 − λt + 1)d′ν (Cν ),
                                                                       t∈S


where the product is taken over the set S of nonzero rows numbered t such that gi′′2 ...ik
involves a polarization of the t-th row of λ into a previous row of λ. (Recall from Lemma

                                                   33
C that ǫi is the sign of the cyclic permutation in the rightmost border strip of Ti with
reference to the canonical tableau Cν⊗1 and that p1 + . . . + pk is the number of rows in ν.)

    To prove the claim, fix an arbitrary gi′′2 ...ik and as before, let us consider just the first
polarization involved in calculating it. Let us suppose that the first row that it polarizes
(necessarily into the first row) is that numbered t. Then we have
              (λ1 −1)        (λ2 −1)                        (λt −1)
            e1          ⊗ e1 e2        ⊗ . . . ⊗ et−1 et              ⊗...   7−→
                                         (λ −1)          (λ −1)                     (λt −1)
                                        e1 1 et−1 ⊗ e1 e2 2              ⊗ . . . ⊗ et         ⊗... +
                                         (λ −1)       (λ −1)                            (λt −2)
                                        e1 1 et ⊗ e1 e2 2    ⊗           . . . ⊗ et−1 et          ⊗ ....

Now in general, after applying d′ν , both fragments displayed on the right hand side will need
                                                                                  (λ )
to be straightened. To straighten the first term (needed if t > 2), we use ∆(e1 1 et−1 ) =
  (λ )             (λ −1)                               (λ )      (λ −1)         (λ −1)
e1 1 ⊗ et−1 + e1 1 et−1 ⊗ e1 . This results in −e1 1 ⊗ e2 2 et−1 ⊗ . . . ⊗ et t         ⊗ . . .,
i.e., the first term undergoes an exchange of et−1 and e1 between the first and second rows
and picks up a negative sign. Now standardness is violated between second and third rows
(unless t = 3). So repeat the same procedure using the second and third rows, and so on
until et−1 moves into the (t − 1)-th row. Thus we need to perform in all t − 2 straightening
operations, the last one resulting in a multiple of λt−1 as we have to multiply et−1 and
  (λt−1 −1)
et−1        while moving et−1 into the (t − 1)-th row. Each straightening also results in a
negative sign. Altogether, the first term after straightening gives
                                                                             
                                    (λ )    (λ )         (λt−1 )    (λ −1)
                      (−1)t−2 λt−1 e1 1 ⊗ e2 2 ⊗ . . . et−1      ⊗ et t    ... .

By the exact same procedure, the second term, after t − 1 straightening operations, gives
                                                                       
                    t−1          (λ1 )  (λ2 )      (λt−1 )   (λt −1)
                (−1) (λt − 1) e1 ⊗ e2 ⊗ . . . et−1 ⊗ et              ... .

Altogether we get (−1)t−2 (λt−1 − λt + 1) times a fragment that matches the corresponding
tableau fragment in the canonical tableau Cν . Evidently the same pattern will continue
as we apply further polarizations. For example after applying the next polarization, say
from the s-th row into the t-th row, and straightening we will get an additional multiple
of (−1)s−t−1 (λs−1 − λs + 1) and the resulting tableau fragment with s rows will match the
corresponding fragment of the canonical tableau Cν . The claimed expression follows after
checking easily that the resulting product of signs matches the claimed sign.

     Using the work done so far, we can lay out the whole calculation as follows.
                                                                      
                                               (λ −1)       (λ −1)
             f ′′ (ι(d′ν (Cν ))) = f ′′ d′λ/1 e1 1    ⊗ e1 e2 2    ⊗...
                                                                                                  
                                                                          (λ −1)       (λ −1)
                                       X
                                  =               b1i2 ...ik gi′′2 ...ik e1 1    ⊗ e1 e2 2    ⊗...
                                      1i2 ...ik

                                  = (−1)p1 +...+pk Dν d′ν (Cν ),

                                                           34
where Dν is the appropriate integer obtained using (∗) above and the values of bi obtained
near the end of the proof of Lemma C. To finish the proof weQwill write an explicit
expression for Dν and simplify it. Q First observe that the product t∈S (λt−1 − λt + 1) in
(∗) immediately boils downs to ak ij =1 (aj−1 − aj + 1), where 2 ≤ j ≤ k. (The factor ak
is present because the last row of λ, consisting of exactly one box, will always satisfy the
condition defining the set S for all gi′′2 ...ik .) So we have
                                                                           
                         X       Y                          Y
                Dν =                 (hj − pj ) ak          (aj−1 − aj + 1) ,
                      i=1i2 ...ik   ij =0             ij =1

where 2 ≤ j ≤ k. We will show by induction on the number of blocks k in the partition ν
that Dν = ℓ1 . . . ℓk . The case k = 1 is immediate, since then the whole expression collapses
to just ak = a1 = ℓ1 . When k > 1, let ν ′ = the partition obtained from ν by deleting the
first block ap11 . Then the terms in Dν with i2 = 0 add up to (h2 − p2 )Dν ′ , the terms with
i2 = 1 add up to (a1 − a2 + 1)Dν ′ and the terms with any other fixed value of i2 (i.e.,
2 ≤ i2 ≤ p2 ) add up to Dν ′ . Since

(h2 −p2 )+(a1 −a2 +1)+(p2 −1) = (a2 +p3 +. . .+pk )+a1 −a2 +p2 = a1 +p2 +. . .+pk = ℓ1

the proof of Lemma A is complete. This also completes the proof of Theorem 2.1.



                                    ACKNOWLEDGMENTS

     Theorem 2.1 in its combinatorial form appears in the author’s Ph.D. thesis written
under the supervision of David Buchsbaum at Brandeis University. I am grateful to him
for constant encouragement. I also thank Alexei Rudakov and Kari Vilonen for many
discussions. The first version of this paper was written at University of Massachusetts at
Amherst. Finally, I am grateful to the referee for an exceptionally thorough and detailed
review, resulting in numerous improvements and removal of inaccuracies, especially in
the introduction and in Section 1. The referee’s insistence on complete proofs was also
instrumental in transforming the earlier cavalier treatment of lemmas A, B and C into the
current form, in particular the shortened proofs of lemmas A and B.



                                            REFERENCES

[Akin] K. Akin, Extensions of symmetric tensors by alternating tensors, J. Algebra 121
(1989), 358–363.
[AB1] K. Akin and D. A. Buchsbaum, Characteristic-free representation theory of the
general linear group, Adv. in Math. 58 (1985), 149–200.
[AB2] K. Akin and D. A. Buchsbaum, Characteristic-free representation theory of the
general linear group II: Homological considerations, Adv. in Math. 72 (1988), 171–210.

                                                35
[ABW] K. Akin, D. A. Buchsbaum, and J. Weyman, Schur functors and Schur complexes,
Adv. in Math. 44 (1982), 207–278.
[Andersen1] H. H. Andersen, Filtrations of cohomology modules for Chevalley groups, Ann.
scient. Éc. Norm. Sup. (4) 16 (1983), 495–528.
[Andersen2] H. H. Andersen, Filtrations and tilting modules, Ann. scient. Éc. Norm.
Sup. (4) 30 (1997), 353–366.
[Andersen3] H. H. Andersen, A sum formula for tilting filtrations, J. Pure Appl. Algebra
152 (2000), 17–40.
[Boe] B. D. Boe, A counterexample to the Gabber-Joseph conjecture, Kazhdan-Lusztig
theory and related topics, Chicago 1989, Contemp. Math. 139, Amer. Math. Soc.,
Providence RI, 1992.
[Boffi] G. Boffi, Characteristic-free decomposition of skew Schur functors, J. Algebra 125
(1989), 288–297.
[BF] D. A. Buchsbaum and D. Flores de Chela, Intertwining numbers: the three-rowed
case, J. Algebra 183 (1996), 605–635.
[CPS] E. Cline, B. Parshall, and L. Scott, Finite-dimensional algebras and highest weight
categories, J. Reine Angew. Math. 391 (1988), 85–99.
[CPSvdK] E. Cline, B. Parshall, L. Scott, and W. van der Kallen, Rational and generic
cohomology, Invent. Math. 39 (1977), 143–163.
[CE] A. Cox and K. Erdmann, Ext2 between Weyl modules for quantum GLn , Math. Proc.
Cambridge Philos. Soc. 128 (2000), 441–463.
[Donkin1] S. Donkin, On Schur algebras and related algebras I, J. Algebra 104 (1986),
310–328.
[Donkin2] S. Donkin, Skew modules for reductive groups, J. Algebra 113 (1988), 465–479.
[Donkin3] S. Donkin, On Kulkarni’s theorems on degree reduction for polynomial modules,
Math. Proc. Cambridge Philos. Soc. 134 (2003), 229–237.
[Doty] S. Doty, The submodule structure of certain Weyl modules for groups of type An ,
J. Algebra 95 (1985), 373–383.
[Erdmann] K. Erdmann, Ext1 for Weyl modules of SL2 (K), Math. Z. 218 (1995), 447–459.
[F] D. Flores de Chela, On intertwining numbers, J. Algebra 171 (1995), 631–653.
[GJ] O. Gabber and A. Joseph, Towards the Kazhdan-Lusztig conjecture, Ann. scient.
Éc. Norm. Sup. (4) 14 (1981), 261–302.
[Green] J. A. Green, Polynomial representations of GLn , Lecture Notes in Mathematics
830, Springer, Berlin-New York, 1980.
[Irving] R. S. Irving, BGG algebras and the BGG reciprocity principle, J. Algebra 135
(1990), 363–380.

                                           36
[James] G. D. James, On the decomposition matrices of the symmetric groups III, J.
Algebra 71 (1981), 115–122.
[Jantzen] J. C. Jantzen, Representations of algebraic groups, second edition, Mathematical
Surveys and Monographs 107, Amer. Math. Soc., 2003.
[Kouwenhoven] F. M. Kouwenhoven, Schur and Weyl functors, Adv. in Math. 90 (1991),
77–113.
[Krop] L. Krop, On the representations of the full matrix semigroup on homogeneous
polynomials, J. Algebra. 99 (1986), 370–421.
[Kulkarni1] U. Kulkarni, Skew Weyl modules for GLn and degree reduction for Schur
algebras, J. Algebra 224 (2000), 248–262.
[Kulkarni2] U. Kulkarni, A homological interpretation of Jantzen’s sum formula, preprint,
arXiv:math.RT/0505371.
[Maliakas] M. Maliakas, Resolutions, homological dimensions, and extensions of hook rep-
resentations, Commun. Algebra 19 (1991), 2195–2216.
[O-M] M. T. F. Oliveira-Martins, On homomorphisms between Weyl modules for hook
partitions, Linear and Multilinear Algebra 23 (1988), 305–323.
[R-G] G. Rondon-Gonzalez, Thesis, Brandeis University, 1998.
[Wen] K. Wen, The composition of intertwining homomorphisms, Commun. Algebra 17
(1989), 587–630.




                                           37
